<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo中图片组件hexo-asset-image的使用</title>
      <link href="2021/03/16/hexo%E4%B8%AD%E5%9B%BE%E7%89%87%E7%BB%84%E4%BB%B6hexo-asset-image%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2021/03/16/hexo%E4%B8%AD%E5%9B%BE%E7%89%87%E7%BB%84%E4%BB%B6hexo-asset-image%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>hexo中直接通过<code>npm i hexo-asset-image</code>下载的组件由于没人维护，目前无法直接使用。<br>根据<a href="https://blog.csdn.net/xjm850552586/article/details/84101345">https://blog.csdn.net/xjm850552586/article/details/84101345</a>的代码.<br>我fork了原<code>hexo-asset-image</code>项目，在npm上发布了<code>hexo-assets-images</code>组件。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-<span class="built_in">image</span> --<span class="built_in">save</span></span><br></pre></td></tr></table></figure><p><code>hexo new post [title]</code>后，会在_posts文件夹下生成同名文件夹<br>在需要插入图片的地方写<code>![logo](logo.jpg)</code>，将插入<code>[title]</code>文件夹下logo.jpg.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编写高质量JavaScript代码的68个有效方法（译）</title>
      <link href="2017/03/29/%E7%BC%96%E5%86%99%E9%AB%98%E8%B4%A8%E9%87%8FJavaScript%E4%BB%A3%E7%A0%81%E7%9A%8468%E4%B8%AA%E6%9C%89%E6%95%88%E6%96%B9%E6%B3%95%EF%BC%88%E8%AF%91%EF%BC%89/"/>
      <url>2017/03/29/%E7%BC%96%E5%86%99%E9%AB%98%E8%B4%A8%E9%87%8FJavaScript%E4%BB%A3%E7%A0%81%E7%9A%8468%E4%B8%AA%E6%9C%89%E6%95%88%E6%96%B9%E6%B3%95%EF%BC%88%E8%AF%91%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="1-了解JavaScript"><a href="#1-了解JavaScript" class="headerlink" title="1.了解JavaScript"></a>1.了解JavaScript</h1><p>JavaScript的设计让我们觉得很熟悉。语法让人联想到Java和许多脚本语言中常见的构造（例如：函数，数组，字典和正则表达式）。JavaScript看起来似乎是一个任何有点编程经验或新手程序员都可以快速上手的语言。因为它语言中的核心概念很少。</p><h2 id="知道你正在使用的JavaSctipt版本"><a href="#知道你正在使用的JavaSctipt版本" class="headerlink" title="知道你正在使用的JavaSctipt版本"></a>知道你正在使用的JavaSctipt版本</h2><p>和大多数成功的技术一样，JavaScript随着时间的推移而发展。从最初作为Java在网页互动编程上的补充，最终取代了Java成为Web开发上主流的编程语言。因其受欢迎程度，1997年形成了国际标准，官方命名为ECMAScript。目前已经有了很多实现了ECMAScript标准的JavaScipt版本。</p><p>1999年定稿的第三版ECMAScript标准（通常称为ES3），依然是目前使用最广泛的JavaScript版本。后一代标准是2009发布的第5版（或者叫ES5），ES5引入了许多新功能，并且将一些之前广泛支持却没有被指定的特性标准化。由于ES5还没有被普遍支持，所以我将在本书中标注出哪些语句或块中使用了ES5。</p><p>除了标准版本之外，还有很多非标准的特性，受到一些JavaScript实现的支持。例如,许多JavaScript引擎支持一个<code>const</code>关键字来定义变量,然而ECMAScript标准并没有定义任何关于常量的语法或行为。而且,在不同实现中<code>const</code>的行为也是不同的。在某些情况下,阻止常量变量更新:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PI = <span class="number">3.141592653589793</span>;</span><br><span class="line">PI = <span class="string">&quot;modified!&quot;</span>;</span><br><span class="line">PI;  <span class="comment">// 3.141592653589793</span></span><br></pre></td></tr></table></figure><p>还有一些实现中，则直接将<code>const</code>是为<code>var</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PI = <span class="number">3.141592653589793</span>;</span><br><span class="line">PI = <span class="string">&quot;modified!&quot;</span>;</span><br><span class="line">PI;  <span class="comment">// &quot;modified!&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一小时入门Vue</title>
      <link href="2017/02/09/%E4%B8%80%E5%B0%8F%E6%97%B6%E5%85%A5%E9%97%A8Vue/"/>
      <url>2017/02/09/%E4%B8%80%E5%B0%8F%E6%97%B6%E5%85%A5%E9%97%A8Vue/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><ul><li>我是一个Vue的狂热粉丝，使用Vue半年左右时间，写这个文章主要是为了给自己做个系统的回顾，顺便给同样有需要的人参考一下，如果文中有不对的地方，欢迎留言指出。   </li><li>我一直认为兴趣是最好的老师，在深入学习Vue之前，先跑起来一个简单的Vue的项目，先感受到Vue的魅力，再结合项目看文档会更加简单。   </li><li>这会是一个简单（极其丑陋）的图书馆里系统，包含服务端和客户端。   </li><li>跟着我动手写，光看不写学不好</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>再开始教程之前，我们先配置好环境</p><ul><li>安装node，包括npm <a href="https://nodejs.org/">https://nodejs.org</a></li><li>安装vue-cli   <code>npm install -g vue-cli</code><blockquote><p>vue-cli 是vue.js的脚手架，用于自动生成vue.js模板工程的</p></blockquote></li><li>安装好yarn（非必须，推荐使用） <a href="https://yarnpkg.com/">https://yarnpkg.com</a><blockquote><p>yarn是Facebook推出了一款开源JavaScript包管理器，比npm更可靠，且速度更快</p></blockquote></li></ul><h2 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h2><p>首先执行<code>vue init webpack-simple vue-curd</code>，<code>vue-curd</code>是文件夹名，会自动创建，会有3个设置项，分别是项目名、描述和作者，一路回车就行了。由于是教学项目，不会使用有太多的依赖，所以这里我们使用<code>webpack-simple</code>模版来创建，在实际使用中可以使用<code>webpack</code>来创建   </p><p><img src="http://okmneu7zl.bkt.clouddn.com/vue-cli%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE.png"></p><p>现在能看到vue-cli为我们建好了项目，<em><strong>后面文中所有的路径根目录都表示该项目目录</strong></em></p><h2 id="服务端搭建"><a href="#服务端搭建" class="headerlink" title="服务端搭建"></a>服务端搭建</h2><p>这里我们借助json-server这个工具快速搭建后台管理系统的服务端程序：</p><ul><li>执行<code>npm i json-server -g</code>，Mac加上<code>sudo</code></li><li>新建<code>/server</code>目录，用于防止服务端的文件</li><li>新建<code>/server/db.json</code>文件，作为服务端的数据库文件</li><li>在<code>/server/db.json</code>文件中写入以下数据：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;user&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="number">10000</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Jimmy&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: <span class="number">28</span>,</span><br><span class="line">      <span class="attr">&quot;gender&quot;</span>: <span class="string">&quot;male&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="number">10001</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: <span class="number">30</span>,</span><br><span class="line">      <span class="attr">&quot;gender&quot;</span>: <span class="string">&quot;female&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;book&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;前端从入门到精通&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;price&quot;</span>: <span class="number">9300</span>,</span><br><span class="line">      <span class="attr">&quot;owner_id&quot;</span>: <span class="number">10000</span>,</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="number">10000</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="number">10001</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Java从入门到放弃&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;price&quot;</span>: <span class="number">1990</span>,</span><br><span class="line">      <span class="attr">&quot;owner_id&quot;</span>: <span class="number">10001</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>最后在<code>/server</code>目录执行<code>json-server db.json -w -p 3000</code>   </li></ul><p>现在打开浏览器，访问网址<code>http://localhost:3000</code>，可以看到如下界面：  </p><p><img src="http://okmneu7zl.bkt.clouddn.com/localhost3000.png"></p><p>点击Routes下面的user会跳转到<code>http://localhost:3000/user</code>，可以看到我们之前在db.json中写入的user数组   </p><p><img src="http://okmneu7zl.bkt.clouddn.com/json.png"></p><p>我们在db.json文件中写入了标准的JSON格式数据，这个json里有一个user数组和一个book数组，这就告诉json-server，我们的数据库里有一个名为user的“表”和一个名为book的“表”，并且表里的数据为xxx，然后json-server就会启动服务器，并且以每个”表”为单位为我们注册一系列标准的RESTFull形式的API接口（路由），以user为例：</p><ul><li>[GET] /user #获取用户列表的接口</li><li>[GET] /user/:id #获取单个用户的接口</li><li>[POST] /user #新增用户的接口</li><li>[PUT] /user/:id #修改用户的接口</li><li>[DELETE] /user/:id #删除用户的接口   </li></ul><p>在获取列表的接口中也可以追加查询参数，来限定查询的结果，比如：</p><ul><li>查询所有男性用户： /user?gender=male</li><li>查询年龄大于等于20并且小于等于29的用户：/user?age_gte=20&amp;age_lte=29</li></ul><p>此外还有分页、排序、匹配、关系查询等查询方式，可以在<a href="https://github.com/typicode/json-server#routes">这里查看更多</a>   </p><p>至此我们就拥有了一套强大的数据接口。</p><h2 id="客户端搭建"><a href="#客户端搭建" class="headerlink" title="客户端搭建"></a>客户端搭建</h2><p>之前我们创建好了项目，但是还没下载依赖，现在根目录执行<code>yarn install</code>   </p><p>安装好依赖后，执行<code>yarn run dev</code>，就能看到下图的欢迎页了   </p><p><img src="http://okmneu7zl.bkt.clouddn.com/vue-welcome.png"></p><h3 id="开始改造模版项目"><a href="#开始改造模版项目" class="headerlink" title="开始改造模版项目"></a>开始改造模版项目</h3><ul><li>删除<code>/src/assets/</code>下的图片</li><li>修改<code>/src/main.js</code>改名为<code>app.js</code>，<em><strong>个人习惯，可以不改，不改的话下两步也跳过</strong></em></li><li>修改<code>/webpack.config.js</code>中第5行<code>entry: &#39;./src/main.js&#39;,</code>为<code>entry: &#39;./src/app.js&#39;,</code>，这个是入口文件。修改第8行<code>publicPath: &#39;/dist/&#39;,</code>为<code>publicPath: &#39;/build/&#39;,</code>，这个是编译后文件的存放路径</li><li>修改<code>/index.html</code>中第9行<code>&lt;script src=&quot;/dist/build.js&quot;&gt;&lt;/script&gt;</code>为<code>&lt;script src=&quot;/build/build.js&quot;&gt;&lt;/script&gt;</code></li><li>将<code>/src/App.vue</code>中的内容删除，只留下下面这些<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>在Vue中<code>&lt;template&gt;</code>中写html，<code>&lt;script&gt;</code>中写脚本，<code>&lt;style&gt;</code>中写样式</li></ul><h3 id="添加用户页面"><a href="#添加用户页面" class="headerlink" title="添加用户页面"></a>添加用户页面</h3><p><code>/src/App.vue</code>添加如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;label&gt;姓名：&lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">        &lt;label&gt;年龄：&lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;number&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">        &lt;label&gt;性别：&lt;/label&gt;</span><br><span class="line">        &lt;select&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;&quot;</span>&gt;请选择&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;male&quot;</span>&gt;男&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;female&quot;</span>&gt;女&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;&lt;br&gt;</span><br><span class="line">        &lt;button type=<span class="string">&quot;button&quot;</span>&gt;添加&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>可以看到添加页面的样子了，在<code>&lt;template&gt;</code>中有一点需要注意，<em><strong>每个组件只能有一个根节点</strong></em>，所以我们用<code>&lt;div&gt;</code>包起来   </p><p><img src="http://okmneu7zl.bkt.clouddn.com/1.png"></p><p>现在我们需要获取用户输入的数据，在Vue中可以采取双向绑定的方式来实现，我们先在<code>&lt;script&gt;</code>中添加如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            form:&#123;</span><br><span class="line">                name:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                age:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                gender:<span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们定义了一个<code>form</code>对象   </p><blockquote><p><code>data</code>是个<code>funciton</code>，要设置的值是<code>retrun</code>回来的一个对象中的属性</p></blockquote><p>下面将实现数据的绑定，改造<code>&lt;template&gt;</code>中代码为如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;label&gt;姓名：&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> v-model=<span class="string">&quot;form.name&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;label&gt;年龄：&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;number&quot;</span> v-model=<span class="string">&quot;form.age&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;label&gt;性别：&lt;/label&gt;</span><br><span class="line">    &lt;select v-model=<span class="string">&quot;form.gender&quot;</span>&gt;</span><br><span class="line">        &lt;option value=<span class="string">&quot;&quot;</span>&gt;请选择&lt;/option&gt;</span><br><span class="line">        &lt;option value=<span class="string">&quot;male&quot;</span>&gt;男&lt;/option&gt;</span><br><span class="line">        &lt;option value=<span class="string">&quot;female&quot;</span>&gt;女&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;&lt;br&gt;</span><br><span class="line">    &lt;button type=<span class="string">&quot;button&quot;</span>&gt;添加&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>通过<code>v-model</code>实现了数据的绑定   </p></blockquote><p>此时<code>data</code>中的值就是用户输入的值了，那么我们如何来确认呢？</p><p>我们来给添加按钮绑定事件，通过点击添加按钮来弹框显示输入的内容，修改<code>&lt;button type=&quot;button&quot;&gt;添加&lt;/button&gt;</code>为<code>&lt;button type=&quot;button&quot; @click=&quot;submit&quot;&gt;添加&lt;/button&gt;</code></p><blockquote><p>Vue中通过<code>@click</code>来监听点击事件</p></blockquote><p>并在<code>&lt;script&gt;</code>中添加如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123; ... &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        <span class="function"><span class="title">submit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            alert(<span class="string">`输入的姓名：<span class="subst">$&#123; <span class="built_in">this</span>.form.name &#125;</span>，输入的年龄：<span class="subst">$&#123; <span class="built_in">this</span>.form.age &#125;</span>，选择的性别：<span class="subst">$&#123; <span class="built_in">this</span>.form.gender &#125;</span>`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>来试一下吧</p><p><img src="http://okmneu7zl.bkt.clouddn.com/2.png"></p><p>现在，让我们把这条数据存到我们的数据库中吧，改写<code>submit</code>为如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">submit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    fetch(<span class="string">&#x27;http://localhost:3000/user&#x27;</span>,&#123;</span><br><span class="line">        method: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        body: <span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.form)</span><br><span class="line">    &#125;).then(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        alert(<span class="string">&quot;添加成功&quot;</span>)</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">response</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(response);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们使用<code>fetch</code>来提交数据</p><blockquote><p>Fetch被称为下一代Ajax技术,采用Promise方式来处理数据。是一种简洁明了的API，比XMLHttpRequest更加简单易用。</p></blockquote><p>然后看一下<code>http://localhost:3000/user</code>，刚才添加的数据就在里面了   </p><p><img src="http://okmneu7zl.bkt.clouddn.com/3.png"></p><h3 id="表单校验"><a href="#表单校验" class="headerlink" title="表单校验"></a>表单校验</h3><p>我们的现在可以在应用里添加用户了。但是还存在不小的问题：</p><ul><li>用户可以输入任意长的名字</li><li>用户可以输入任意的年龄</li><li>用户可以不选择性别</li></ul><p>盲目信任用户输入的数据，会给系统埋下不小的隐患。这回我们就来把这隐患扼杀在摇篮之中。</p><p>表单验证无非就是对用户输入的数据进行有效性、非空性验证，验证失败会在相应的地方显示错误信息，并阻止用户提交表单。</p><p>我们需要记录每一个字段当前的有效状态，有效时隐藏错误信息，无效时显示错误信息。</p><p>而这个有效/无效，可以在表单值改变的时候进行判断。</p><p>要做校验，在Vue中我们第一时间想到的肯定是<code>computed</code>、<code>watch</code>、<code>get</code>、<code>set</code></p><blockquote><p><a href="https://cn.vuejs.org/v2/guide/computed.html">https://cn.vuejs.org/v2/guide/computed.html</a>   </p></blockquote><p>思路大致上就是在form值发生改变时去同步的执行校验，如果校验失败，显示错误信息，有效则隐藏</p><p>让我们来试试，改造一下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>姓名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.name.value&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>年龄：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.age.value&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;form.gender.value&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">            form:&#123;</span><br><span class="line">                name:&#123;</span><br><span class="line"><span class="javascript">                    value:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    valid:<span class="literal">false</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                age:&#123;</span><br><span class="line"><span class="javascript">                    value:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    valid:<span class="literal">false</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                gender:&#123;</span><br><span class="line"><span class="javascript">                    value:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    valid:<span class="literal">false</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">submit</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            fetch(<span class="string">&#x27;http://localhost:3000/user&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">                method: <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line">                headers: &#123;</span><br><span class="line"><span class="javascript">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                body: <span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.form)</span></span><br><span class="line"><span class="javascript">            &#125;).then(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;添加成功&quot;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;).catch(<span class="function"><span class="params">response</span> =&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(response);</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    computed:&#123;</span><br><span class="line"><span class="javascript">        <span class="string">&#x27;form.name.valid&#x27;</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">this</span>.form.name.value.length &gt; <span class="number">10</span> ? <span class="literal">false</span> : <span class="literal">true</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>尝试了没有？这段代码是无效的，用<code>watch</code>也是无效的，这里就不写出来了</p><p><del>受ES5的限制，Vuejs不能检测到对象属性的变化</del><code>这句话是错的，下面组件化的原因就改成使代码看着简洁点吧。所以百度出来的东西不一定是对的。。</code></p><p>那么，我们该如何来做呢？</p><p>既然Vue只能检测到data的属性，那么我们可以使用组件化来实现，同时使我们的代码简洁，考虑到之后的修改页面也有类似的页面结构，我们将整个form封成组件</p><blockquote><p>组件（Component）是 Vue.js 最强大的功能之一。组件可以扩展 HTML 元素，封装可重用的代码。在较高层面上，组件是自定义元素， Vue.js 的编译器为它添加特殊功能。在有些情况下，组件也可以是原生 HTML 元素的形式，以 is 特性扩展。</p></blockquote><ul><li>新建<code>/src/components/</code>目录</li><li>在<code>/src/components/</code>下新建<code>form.vue</code>和<code>formItem.vue</code></li><li>将之前的代码搬到<code>formItem.vue</code>，如下：</li></ul><blockquote><p>组件实例的作用域是孤立的。这意味着不能并且不应该在子组件的模板内直接引用父组件的数据。可以使用 props 把数据传给子组件。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>&#123;&#123;label&#125;&#125;：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;String&#x27;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;Number&#x27;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;Select&#x27;&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    props: &#123;</span><br><span class="line">        label: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">            <span class="keyword">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        type: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">            <span class="keyword">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        value: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">            <span class="keyword">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们使用<code>props</code>接收父组件传递过来的参数，用<code>v-if</code>来判断该显示什么，像在<code>data</code>中使用一样用<code>v-model</code>来绑定数据</p><p>下面来写<code>formItem.vue</code>的父组件<code>form.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form-item</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,key) in form&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:value</span>=<span class="string">&quot;item.value&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:type</span>=<span class="string">&quot;item.type&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:label</span>=<span class="string">&quot;item.label&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> formItem <span class="keyword">from</span> <span class="string">&#x27;./formItem.vue&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    props: &#123;</span><br><span class="line"><span class="javascript">        form: <span class="built_in">Object</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        formItem</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我将<code>formItem.vue</code>引入，并通过<code>components</code>在Vue中注册，这里我使用驼峰命名，在使用时直接通过<code>&lt;form-item&gt;</code>来使用</p><p>通过<code>props</code>来获取父组件<code>App.vue</code>传来的数据，然后使用<code>v-for</code>遍历对象的属性，通过<code>:value</code>、<code>:type</code>、<code>:label</code>将值传给子组件<code>formItem.vue</code></p><p>最后修改一下<code>App.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-form</span> <span class="attr">:form</span>=<span class="string">&quot;form&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> form <span class="keyword">from</span> <span class="string">&#x27;./components/form.vue&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">            form: &#123;</span><br><span class="line">                name: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;姓名&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;String&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                age: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;年龄&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;Number&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                gender: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;性别&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;Select&#x27;</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123; ... &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line"><span class="javascript">        <span class="string">&#x27;my-form&#x27;</span>: form</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>现在组件封装好了，但是数据还是没校验。我们先来设定一下规则，继续修改<code>/src/App.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-form</span> <span class="attr">:form</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> form <span class="keyword">from</span> <span class="string">&#x27;./components/form.vue&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">            form: &#123;</span><br><span class="line">                name: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;姓名&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;String&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                age: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;年龄&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;Number&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                gender: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;性别&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;Select&#x27;</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            rules: &#123;    <span class="comment">//校验规则</span></span></span><br><span class="line">                name: [&#123;</span><br><span class="line">                        max: 10,</span><br><span class="line">                        min: 2,</span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;名字必须在2-10个字符之间&#x27;</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        type: <span class="string">&#x27;String&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;名字格式不正确&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                age: [&#123;</span><br><span class="line">                        max: 100,</span><br><span class="line">                        min: 0,</span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;年龄必须在0-100岁之间&#x27;</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        type: <span class="string">&#x27;Number&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;年龄只能是数字&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                gender: [&#123;</span><br><span class="line"><span class="javascript">                    value: [<span class="string">&#x27;male&#x27;</span>, <span class="string">&#x27;female&#x27;</span>],</span></span><br><span class="line"><span class="javascript">                    message: <span class="string">&#x27;请选择性别&#x27;</span></span></span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            validateState: <span class="literal">true</span> <span class="comment">//表单校验状态</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123; ... &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line"><span class="javascript">        <span class="string">&#x27;my-form&#x27;</span>: form</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在<code>components</code>中，这次我们没有和<code>form.vue</code>中一样注册组件，而采取自定义名称的方式<code>my-form</code></p><p>在这里，我们设定每个属性的校验规则都是一个数组，根据不同的情况可以显示不同的错误信息</p><ul><li><code>max</code>字符串最大长度或number最大值</li><li><code>min</code>字符串最小长度或number最小值</li><li><code>type</code>指定类型</li><li><code>value</code>值只能是该数组中的值</li><li><code>message</code>错误信息</li></ul><p>然后通过<code>:rules</code>将规则传给<code>form.vue</code>，下面是<code>form.vue</code>的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &lt;form-item</span><br><span class="line">    v-for=&quot;(item,key) in form&quot;</span><br><span class="line">    :field=&quot;item.field&quot;</span><br><span class="line">    :value=&quot;item.value&quot;</span><br><span class="line">    :type=&quot;item.type&quot;</span><br><span class="line">    :rule=&quot;item.rule&quot;</span><br><span class="line">    :label=&quot;item.label&quot;&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> formItem <span class="keyword">from</span> <span class="string">&#x27;./formItem.vue&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    props: &#123;</span><br><span class="line"><span class="javascript">        form: <span class="built_in">Object</span>,</span></span><br><span class="line"><span class="javascript">        rules: <span class="built_in">Object</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="javascript">    created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> form = <span class="built_in">this</span>.form</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> rules = <span class="built_in">this</span>.rules</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> form) &#123;</span></span><br><span class="line">            form[key].rule = rules[key]</span><br><span class="line">            form[key].field = key</span><br><span class="line"><span class="javascript">            form[key].validate = <span class="literal">false</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.form = form</span></span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        formItem</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>每个 Vue 实例在被创建之前都要经过一系列的初始化过程。例如，实例需要配置数据观测(data observer)、编译模版、挂载实例到 DOM ，然后在数据变化时更新 DOM 。在这个过程中，实例也会调用一些<em><strong>生命周期钩子</strong></em> ，这就给我们提供了执行自定义逻辑的机会。例如<code>created</code>这个钩子在实例被创建之后被调用</p></blockquote><p>生命周期：</p><p><img src="http://okmneu7zl.bkt.clouddn.com/lifecycle.png"></p><p>在组件<code>created</code>中，我们将rules整合到form中，方便后面使用，并添加field(属性名)，validate（校验状态)字段</p><p>在<code>&lt;form-item&gt;</code>中，像之前一样将值传给<code>formItem.vue</code></p><p>下面来看下<code>formItem.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>&#123;&#123;label&#125;&#125;：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;String&#x27;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;Number&#x27;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;Select&#x27;&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            message: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            val: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    props: &#123;</span><br><span class="line">        field: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">String</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        label: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">            <span class="keyword">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        type: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">            <span class="keyword">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        value: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">            <span class="keyword">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        rule: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">Array</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">val</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> _this = <span class="built_in">this</span> <span class="comment">//试试不这么做会怎样，注释掉这行，将下面的_this都换成this，看看this指的是谁</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> valid_msg = <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> validateState = <span class="literal">true</span></span></span><br><span class="line">            if (_this.rule) &#123;</span><br><span class="line"><span class="javascript">                _this.rule.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">v, i</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> keys = <span class="built_in">Object</span>.keys(v)</span></span><br><span class="line">                    if (keys) &#123;</span><br><span class="line"><span class="javascript">                        keys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">k</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">if</span> (k != <span class="string">&#x27;message&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">                                <span class="keyword">let</span> valide = <span class="built_in">eval</span>(k)</span></span><br><span class="line">                                if (!valide(_this.val, v[k])) &#123;</span><br><span class="line"><span class="javascript">                                    valid_msg = v.message ? v.message : <span class="string">&#x27;系统异常&#x27;</span></span></span><br><span class="line"><span class="javascript">                                    validateState = <span class="literal">false</span></span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        validateState = <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">                        valid_msg = <span class="string">&#x27;系统异常&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            _this.message = valid_msg</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">value</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.val = <span class="built_in">this</span>.value</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">max</span>(<span class="params">v, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (<span class="keyword">typeof</span> v == <span class="string">&#x27;string&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v.length &gt; r ? <span class="literal">false</span> : <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> v == <span class="string">&#x27;number&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v &gt; r ? <span class="literal">false</span> : <span class="literal">true</span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">min</span>(<span class="params">v, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (<span class="keyword">typeof</span> v == <span class="string">&#x27;string&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v.length &lt; r ? <span class="literal">false</span> : <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> v == <span class="string">&#x27;number&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v &lt; r ? <span class="literal">false</span> : <span class="literal">true</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">type</span>(<span class="params">v, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="keyword">typeof</span> v == r.toLowerCase() ? <span class="literal">true</span> : <span class="literal">false</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">value</span>(<span class="params">v, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> r.indexOf(v) != -<span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em><strong>尝试一下注释中说的</strong></em>，看看this指的是什么</p><p>到现在，我们已经能够实现校验了，但是问题又来了，现在<code>App.vue</code>中的<code>form</code>里面的属性值是没有的（动手试试），如<code>form.name.value</code>值一直是空的</p><blockquote><p>prop 是单向绑定的：当父组件的属性变化时，将传导给子组件，但是不会反过来。这是为了防止子组件无意修改了父组件的状态——这会让应用的数据流难以理解。</p></blockquote><p>那么我们如何将<code>formItem.vue</code>中的值传给<code>App.vue</code>，这里是最终形态的<code>formItem.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>&#123;&#123;label&#125;&#125;：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;String&#x27;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;Number&#x27;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;Select&#x27;&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            message: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            val: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    props: &#123;</span><br><span class="line">        field: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">String</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        label: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">            <span class="keyword">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        type: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">            <span class="keyword">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        value: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">            <span class="keyword">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        rule: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="built_in">Array</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">val</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> _this = <span class="built_in">this</span> <span class="comment">//试试不这么做会怎样，注释掉这行，将下面的_this都换成this，看看this指的是谁</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> valid_msg = <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> validateState = <span class="literal">true</span></span></span><br><span class="line">            if (_this.rule) &#123;</span><br><span class="line"><span class="javascript">                _this.rule.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">v, i</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> keys = <span class="built_in">Object</span>.keys(v)</span></span><br><span class="line">                    if (keys) &#123;</span><br><span class="line"><span class="javascript">                        keys.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">k</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">if</span> (k != <span class="string">&#x27;message&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">                                <span class="keyword">let</span> valide = <span class="built_in">eval</span>(k)</span></span><br><span class="line">                                if (!valide(_this.val, v[k])) &#123;</span><br><span class="line"><span class="javascript">                                    valid_msg = v.message ? v.message : <span class="string">&#x27;系统异常&#x27;</span></span></span><br><span class="line"><span class="javascript">                                    validateState = <span class="literal">false</span></span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        validateState = <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">                        valid_msg = <span class="string">&#x27;系统异常&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            _this.message = valid_msg</span><br><span class="line"><span class="javascript">            _this.$emit(<span class="string">&quot;transferValue&quot;</span>, [_this.field, _this.val,validateState])</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">value</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.val = <span class="built_in">this</span>.value</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">max</span>(<span class="params">v, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (<span class="keyword">typeof</span> v == <span class="string">&#x27;string&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v.length &gt; r ? <span class="literal">false</span> : <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> v == <span class="string">&#x27;number&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v &gt; r ? <span class="literal">false</span> : <span class="literal">true</span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">min</span>(<span class="params">v, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (<span class="keyword">typeof</span> v == <span class="string">&#x27;string&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v.length &lt; r ? <span class="literal">false</span> : <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> v == <span class="string">&#x27;number&#x27;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v &lt; r ? <span class="literal">false</span> : <span class="literal">true</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">type</span>(<span class="params">v, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="keyword">typeof</span> v == r.toLowerCase() ? <span class="literal">true</span> : <span class="literal">false</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">value</span>(<span class="params">v, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> r.indexOf(v) != -<span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们使用自定义事件<code>$emit</code>将值传递出去，这里事件名是<code>transferValue</code>，在父组件中，只要监听<code>transferValue</code>事件就行了</p><p>下面是完整的<code>form.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &lt;form-item</span><br><span class="line">    v-for=&quot;(item,key) in form&quot;</span><br><span class="line">    v-on:transferValue=&quot;transferValue&quot;</span><br><span class="line">    :field=&quot;item.field&quot;</span><br><span class="line">    :value=&quot;item.value&quot;</span><br><span class="line">    :type=&quot;item.type&quot;</span><br><span class="line">    :rule=&quot;item.rule&quot;</span><br><span class="line">    :label=&quot;item.label&quot;&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> formItem <span class="keyword">from</span> <span class="string">&#x27;./formItem.vue&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    props: &#123;</span><br><span class="line"><span class="javascript">        form: <span class="built_in">Object</span>,</span></span><br><span class="line"><span class="javascript">        rules: <span class="built_in">Object</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="javascript">    created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> form = <span class="built_in">this</span>.form</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> rules = <span class="built_in">this</span>.rules</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> form) &#123;</span></span><br><span class="line">            form[key].rule = rules[key]</span><br><span class="line">            form[key].field = key</span><br><span class="line"><span class="javascript">            form[key].validate = <span class="literal">false</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.form = form</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">transferValue</span>(<span class="params">args</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> [field, value, validate] = [...args]</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.form[field].validate = validate</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> flag = <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> <span class="built_in">this</span>.form) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (!<span class="built_in">this</span>.form[key].validate)</span></span><br><span class="line"><span class="javascript">                    flag = <span class="literal">false</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.$emit(<span class="string">&#x27;changeValue&#x27;</span>, [field, value, flag])</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        formItem</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们看一下<code>&lt;form-item&gt;</code>中，<code>v-on:transferValue=&quot;transferValue&quot;</code>就是上面说的监听事件，后面的<code>transferValue</code>是<code>methods</code>中的方法名</p><p>下面是完整的<code>App.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-form</span> <span class="attr">:form</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">v-on:changeValue</span>=<span class="string">&quot;changeValue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> form <span class="keyword">from</span> <span class="string">&#x27;./components/form.vue&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">            form: &#123;</span><br><span class="line">                name: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;姓名&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;String&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                age: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;年龄&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;Number&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                gender: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;性别&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;Select&#x27;</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            rules: &#123;     <span class="comment">//校验规则</span></span></span><br><span class="line">                name: [&#123;</span><br><span class="line">                        max: 10,</span><br><span class="line">                        min: 2,</span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;名字必须在2-10个字符之间&#x27;</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        type: <span class="string">&#x27;String&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;名字格式不正确&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                age: [&#123;</span><br><span class="line">                        max: 100,</span><br><span class="line">                        min: 0,</span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;年龄必须在0-100岁之间&#x27;</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        type: <span class="string">&#x27;Number&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;年龄只能是数字&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                gender: [&#123;</span><br><span class="line"><span class="javascript">                    value: [<span class="string">&#x27;male&#x27;</span>, <span class="string">&#x27;female&#x27;</span>],</span></span><br><span class="line"><span class="javascript">                    message: <span class="string">&#x27;请选择性别&#x27;</span></span></span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            validateState: <span class="literal">true</span> <span class="comment">//表单校验状态</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">changeValue</span>(<span class="params">args</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> [field, value, validateState] = [...args]</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.form[field].value = value</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.validateState = validateState</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">submit</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(<span class="built_in">this</span>.validateState)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> form = <span class="built_in">this</span>.form</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> parms = &#123;</span></span><br><span class="line">                    name: form.name.value,</span><br><span class="line">                    age: form.age.value,</span><br><span class="line">                    gender: form.gender.value</span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                fetch(<span class="string">&#x27;http://localhost:3000/user&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">                    method: <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line">                    headers: &#123;</span><br><span class="line"><span class="javascript">                        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    body: <span class="built_in">JSON</span>.stringify(parms)</span></span><br><span class="line"><span class="javascript">                &#125;).then(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;添加成功&quot;</span>)</span></span><br><span class="line"><span class="javascript">                &#125;).catch(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(response);</span></span><br><span class="line">                &#125;)</span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;数据错误，请修改后提交&#x27;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line"><span class="javascript">        <span class="string">&#x27;my-form&#x27;</span>: form</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在，来回顾下流程：</p><ul><li><code>formItem.vue</code>中<code>watch</code>了<code>val</code></li><li>在<code>val</code>发生变化时，遍历对应的<code>rule</code></li><li>当有不匹配规则时，将错误信息改成<code>rule</code>中对应的错误信息</li><li>将属性名、输入值、校验状态通过<code>$emit</code>发送给<code>form.vue</code></li><li><code>form.vue</code>中将通过<code>transferValue</code>收到传递的参数</li><li>将<code>form</code>中对应属性名的属性校验状态修改为传递来的值</li><li>遍历<code>form</code>中所有属性的校验状态，最后将属性名、输入值、整个<code>form</code>的校验状态通过<code>changeValue</code>传给<code>App.vue</code></li><li><code>App.vue</code>中通过<code>changeValue</code>接受参数，将<code>form</code>对应属性的值更新，并修改整个<code>form</code>的校验状态<code>validateState</code></li><li>最后在<code>submit</code>中判断<code>validateState</code>，来判断是否允许提交</li></ul><p>现在我们有了一个完整的添加页面了</p><h3 id="加入路由及列表页面"><a href="#加入路由及列表页面" class="headerlink" title="加入路由及列表页面"></a>加入路由及列表页面</h3><p>现在，我们需要做一个列表页面来展示数据库中的数据，那么，该写在哪呢？添加页面我们目前是直接写在<code>App.vue</code>里的</p><p>之前我们只使用了<code>json-server</code>的<code>POST</code>请求，现在我们还要用到<code>GET</code>请求，所以对我们所有的<code>request</code>进行封装</p><ul><li>新建<code>/src/services/</code>目录并新建<code>request.js</code></li><li>将下面的代码复制到<code>request.js</code>中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">method, url, body</span>) </span>&#123;</span><br><span class="line">    method = method.toUpperCase();</span><br><span class="line">    <span class="keyword">if</span> (method === <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">        body = <span class="literal">undefined</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        body = body &amp;&amp; <span class="built_in">JSON</span>.stringify(body);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> fetch(url, &#123;</span><br><span class="line">            method,</span><br><span class="line">            headers: &#123;</span><br><span class="line">                <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            body</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (res.status &gt;= <span class="number">200</span> &amp;&amp; res.status &lt; <span class="number">300</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> res.json();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                alert(<span class="string">&#x27;系统异常&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> get = <span class="function"><span class="params">url</span> =&gt;</span> request(<span class="string">&#x27;GET&#x27;</span>, url);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> post = <span class="function">(<span class="params">url, body</span>) =&gt;</span> request(<span class="string">&#x27;POST&#x27;</span>, url, body);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> put = <span class="function">(<span class="params">url, body</span>) =&gt;</span> request(<span class="string">&#x27;PUT&#x27;</span>, url, body);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> del = <span class="function">(<span class="params">url, body</span>) =&gt;</span> request(<span class="string">&#x27;DELETE&#x27;</span>, url, body);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>新建目录<code>/src/views</code></li><li>新建文件<code>/src/views/list.vue</code></li><li>新建文件<code>/src/views/add.vue</code></li><li>将<code>/src/App.vue</code>中的代码复制到<code>/src/views/add.vue</code></li><li>修改<code>add.vue</code>如下：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> form <span class="keyword">from</span> <span class="string">&#x27;../components/form.vue&#x27;</span>   <span class="comment">//注意修改路径为../</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; post &#125; <span class="keyword">from</span> <span class="string">&#x27;../services/request.js&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123; ... &#125;,</span></span><br><span class="line">    methods: &#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">changeValue</span>(<span class="params">args</span>)</span> &#123; ... &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">submit</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(<span class="built_in">this</span>.validateState)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> form = <span class="built_in">this</span>.form</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> parms = &#123; ... &#125;</span></span><br><span class="line"><span class="javascript">                post(<span class="string">&#x27;http://localhost:3000/user&#x27;</span>,parms).then(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;添加成功&quot;</span>)</span></span><br><span class="line">                &#125;)</span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123; ... &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123; ... &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em><strong>注意：</strong></em> 修改路径<code>./</code>为<code>../</code></p><p>将下面的代码复制到<code>list.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in list&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;index+1&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.gender&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.age&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; get &#125; <span class="keyword">from</span> <span class="string">&#x27;../services/request.js&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">            list: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        get(<span class="string">&#x27;http://localhost:3000/user&#x27;</span>).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.list = response</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在，我们拥有了一个list页面，一个add页面。但是，我们并不能看到，为什么？<br>回顾一下：</p><ul><li>我们在<code>/webpack.config.js</code>中配置了入口是<code>./src/app.js</code></li><li>然后我们在<code>/app.js</code>引入了<code>/App.vue</code></li></ul><p>然后咧？<code>list.vue</code>和<code>add.vue</code>怎么办？</p><p>这里我们引入<code>vue-router</code>路由</p><blockquote><p>用 Vue.js + vue-router 创建单页应用，是非常简单的。使用 Vue.js 时，我们就已经把组件组合成一个应用了，当你要把 vue-router 加进来，只需要配置组件和路由映射，然后告诉 vue-router 在哪里渲染它们</p></blockquote><p>终端在项目路径下执行<code>npm install vue-router -S</code></p><p><code>vue-router</code>添加到了<code>package.json</code>的<code>dependencies</code>中</p><p><img src="http://okmneu7zl.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-02-14%20%E4%B8%8B%E5%8D%881.40.44.png"></p><blockquote><p><code>devDependencies</code>  里面的插件只用于开发环境，不用于生产环境，而 <code>dependencies</code>  是需要发布到生产环境的。</p></blockquote><ul><li>新建<code>/src/router</code>目录，并在目录中新建<code>index.js</code>，写入以下代码：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> List <span class="keyword">from</span> <span class="string">&#x27;../views/list.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Add <span class="keyword">from</span> <span class="string">&#x27;../views/add.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> router = <span class="keyword">new</span> Router(&#123;</span><br><span class="line">    mode: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    base: __dirname,</span><br><span class="line">    routes: [&#123;</span><br><span class="line">            name: <span class="string">&#x27;list&#x27;</span>,       <span class="comment">//名称</span></span><br><span class="line">            path: <span class="string">&#x27;/&#x27;</span>,          <span class="comment">//路径</span></span><br><span class="line">            component: List     <span class="comment">//组件</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">&#x27;add&#x27;</span>,</span><br><span class="line">            path: <span class="string">&#x27;/add&#x27;</span>,</span><br><span class="line">            component: Add</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;     <span class="comment">//在每次路由跳转之前都会先执行其中的代码，再通过调用next()执行后续操作</span></span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.afterEach(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;&#125;)      <span class="comment">//每次路由跳转之后都会执行其中的代码</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里我们给列表页指定路径为<code>/</code>，添加页为<code>/add</code>，那么，我们在浏览器中输入<code>http://localhost:8080</code>时，默认的就是列表页，<code>http://localhost:8080/add</code>时，就是添加页</p><ul><li>修改<code>/src/app.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>将<code>/src/App.vue</code>修改为如下：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">class</span>=<span class="string">&quot;view&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>路由匹配到的组件将在<code>&lt;router-view&gt;</code>中渲染</p><p>好了，试试吧，现在可以看到效果了</p><p><img src="http://okmneu7zl.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-02-14%20%E4%B8%8B%E5%8D%882.07.58.png"></p><p>但是我们现在只能通过在浏览器输入地址来切换页面，这可不行，我们来加个按钮</p><p>在<code>list.vue</code>中添加如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">       ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/add&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在<code>add.vue</code>中添加如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-form</span> <span class="attr">:form</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">v-on:changeValue</span>=<span class="string">&quot;changeValue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span>返回列表<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;router-link&gt;</code>中<code>to</code>写的是要跳转的路径</p><p>好了，添加和列表页完成了，下面来做编辑页面</p><h3 id="编辑页面和路由传参"><a href="#编辑页面和路由传参" class="headerlink" title="编辑页面和路由传参"></a>编辑页面和路由传参</h3><ul><li>新建<code>src/views/edit.vue</code>，并将<code>add.vue</code>中的代码复制过来</li><li>在<code>/src/router/index.js</code>中添加<code>edit</code>组件的路由映射，代码如下</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> List <span class="keyword">from</span> <span class="string">&#x27;../views/list.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Add <span class="keyword">from</span> <span class="string">&#x27;../views/add.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Edit <span class="keyword">from</span> <span class="string">&#x27;../views/edit.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> router = <span class="keyword">new</span> Router(&#123;</span><br><span class="line">    mode: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    base: __dirname,</span><br><span class="line">    routes: [&#123;</span><br><span class="line">            name: <span class="string">&#x27;list&#x27;</span>,       <span class="comment">//名称</span></span><br><span class="line">            path: <span class="string">&#x27;/&#x27;</span>,          <span class="comment">//路径</span></span><br><span class="line">            component: List     <span class="comment">//组件</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">&#x27;add&#x27;</span>,</span><br><span class="line">            path: <span class="string">&#x27;/add&#x27;</span>,</span><br><span class="line">            component: Add</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">&#x27;edit&#x27;</span>,</span><br><span class="line">            path: <span class="string">&#x27;/edit/:id&#x27;</span>,</span><br><span class="line">            component: Edit</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;     <span class="comment">//在每次路由跳转之前都会先执行其中的代码，再通过调用next()执行后续操作</span></span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.afterEach(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;&#125;)      <span class="comment">//每次路由跳转之后都会执行其中的代码</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>:id</code>是什么？下面讲到</p><ul><li>在<code>/src/views/list.vue</code>中添加如下编辑按钮，代码如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in list&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;index+1&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.gender&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.age&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;toEdit(item.id)&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/add&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; get &#125; <span class="keyword">from</span> <span class="string">&#x27;../services/request.js&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123; ... &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123; ... &#125;,</span></span><br><span class="line">    methods: &#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">toEdit</span>(<span class="params">id</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.$router.push(&#123;</span></span><br><span class="line"><span class="javascript">                name: <span class="string">&#x27;edit&#x27;</span>,</span></span><br><span class="line">                params: &#123;</span><br><span class="line">                    id: id</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里我们使用了<code>router</code>的另一种跳转方式，编程式路由</p><p>其中<code>name</code>就是我们在<code>/src/router/index.js</code>中设置的<code>name</code>，还记得吗？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    name: <span class="string">&#x27;edit&#x27;</span>,</span><br><span class="line">    path: <span class="string">&#x27;/edit/:id&#x27;</span>,</span><br><span class="line">    component: Edit</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>params</code>就是我们在路由跳转时传递给<code>edit.vue</code>页面的参数，<code>id</code>对应的就是上面<code>path: &#39;/edit/:id&#39;,</code>中的<code>id</code></p><p>下面来处理编辑页面，代码修改如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-form</span> <span class="attr">:form</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">v-on:changeValue</span>=<span class="string">&quot;changeValue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span>返回列表<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> form <span class="keyword">from</span> <span class="string">&#x27;../components/form.vue&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; get , put &#125; <span class="keyword">from</span> <span class="string">&#x27;../services/request.js&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">            form: &#123;</span><br><span class="line">                name: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;姓名&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;String&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                age: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;年龄&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;Number&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                gender: &#123;</span><br><span class="line"><span class="javascript">                    label: <span class="string">&#x27;性别&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    value: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">&#x27;Select&#x27;</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            rules: &#123;     <span class="comment">//校验规则</span></span></span><br><span class="line">                name: [&#123;</span><br><span class="line">                        max: 10,</span><br><span class="line">                        min: 2,</span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;名字必须在2-10个字符之间&#x27;</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        type: <span class="string">&#x27;String&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;名字格式不正确&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                age: [&#123;</span><br><span class="line">                        max: 100,</span><br><span class="line">                        min: 0,</span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;年龄必须在0-100岁之间&#x27;</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        type: <span class="string">&#x27;Number&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        message: <span class="string">&#x27;年龄只能是数字&#x27;</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                gender: [&#123;</span><br><span class="line"><span class="javascript">                    value: [<span class="string">&#x27;male&#x27;</span>, <span class="string">&#x27;female&#x27;</span>],</span></span><br><span class="line"><span class="javascript">                    message: <span class="string">&#x27;请选择性别&#x27;</span></span></span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            validateState: <span class="literal">true</span>, <span class="comment">//表单校验状态</span></span></span><br><span class="line"><span class="javascript">            id:<span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">created</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.id = <span class="built_in">this</span>.$route.params.id  <span class="comment">//路由中传递过来的参数</span></span></span><br><span class="line"><span class="javascript">        get(<span class="string">`http://localhost:3000/user/<span class="subst">$&#123;<span class="built_in">this</span>.id&#125;</span>`</span>).then(<span class="function"><span class="params">response</span> =&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> response) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(key != <span class="string">&#x27;id&#x27;</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.form[key].value = response[key]</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="built_in">this</span>.form);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">changeValue</span>(<span class="params">args</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> [field, value, validateState] = [...args]</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.form[field].value = value</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.validateState = validateState</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">submit</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(<span class="built_in">this</span>.validateState)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> form = <span class="built_in">this</span>.form</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> parms = &#123;</span></span><br><span class="line">                    name: form.name.value,</span><br><span class="line">                    age: form.age.value,</span><br><span class="line">                    gender: form.gender.value</span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                put(<span class="string">`http://localhost:3000/user/<span class="subst">$&#123;<span class="built_in">this</span>.id&#125;</span>`</span>,parms).then(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;修改成功&quot;</span>)</span></span><br><span class="line">                &#125;)</span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;数据错误，请修改后提交&#x27;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line"><span class="javascript">        <span class="string">&#x27;my-form&#x27;</span>: form</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编辑页面和添加的区别在于进入页面时需要通过<code>this.$route.params.id</code>获取列表页传过来的<code>id</code>，然后通过<code>id</code>查询出该用户的信息，并填充在form中</p><p>这里我们还修改了<code>import &#123; get , put &#125; from &#39;../services/request.js&#39;</code>和<code>submit()</code>方法，注意不要漏改了，或者直接整个复制过去</p><p>好了，现在编辑页面也完成了</p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>现在添加删除功能，有了前面的编辑，删除相信你不看我的代码也能写了，自己先试试吧</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in list&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;index+1&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.gender&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.age&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;toEdit(item.id)&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;toDel(item.id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/add&quot;</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; get , del &#125; <span class="keyword">from</span> <span class="string">&#x27;../services/request.js&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123; ... &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123; ... &#125;,</span></span><br><span class="line">    methods: &#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">toEdit</span>(<span class="params">id</span>)</span> &#123; ... &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">toDel</span>(<span class="params">id</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            del(<span class="string">`http://localhost:3000/user/<span class="subst">$&#123;id&#125;</span>`</span>).then(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                get(<span class="string">&#x27;http://localhost:3000/user&#x27;</span>).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.list = response</span></span><br><span class="line">                &#125;)</span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;删除成功&#x27;</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在我们完成用户的增删改查所有功能了，但是现在所有人都可以直接操作数据，这肯定不行，我们还需要加入登陆验证才行</p><h3 id="登陆和状态管理-Vuex"><a href="#登陆和状态管理-Vuex" class="headerlink" title="登陆和状态管理(Vuex)"></a>登陆和状态管理(Vuex)</h3><p><em><strong>未完待续</strong></em></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongoose入门</title>
      <link href="2017/02/07/Mongoose%E5%85%A5%E9%97%A8/"/>
      <url>2017/02/07/Mongoose%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装Node-js和MongoDB"><a href="#安装Node-js和MongoDB" class="headerlink" title="安装Node.js和MongoDB"></a>安装Node.js和MongoDB</h3><p>安装Node.js，地址：<a href="https://nodejs.org/">https://nodejs.org/</a><br>安装MongoDB，地址：<a href="https://www.mongodb.com/download-center?jmp=nav#community">https://www.mongodb.com/</a>    </p><h3 id="启动MongoDB"><a href="#启动MongoDB" class="headerlink" title="启动MongoDB"></a>启动MongoDB</h3><p>cd到mongodb下的bin文件夹，执行<code>./mongod</code>即可，但是我们执行后会出如下错误<br><img src="http://okmneu7zl.bkt.clouddn.com/WX20170131-131657.png"><br>这里提示我们没有/data/db文件夹，需要我们自己来新建，这里我在mongodb-3.4.0下新建了mydata文件夹，并通过<code>./mongod --dbpath ../mydata</code>启动了MongoDB，<code>--datapath</code>是用来指定路径的<br><img src="http://okmneu7zl.bkt.clouddn.com/WX20170131-133558@2x.png"><br>那么让我们来体验一下mongodb吧，首先要新建一个tab，然后同样cd到bin目录下，执行<code>./mongo</code><br><img src="http://okmneu7zl.bkt.clouddn.com/WX20170131-134433.png"><br>然后我们切回之前的tab可以看到有一个新的连接<br><img src="http://okmneu7zl.bkt.clouddn.com/WX20170131-134649.png">   </p><h3 id="MongoDB基础命令"><a href="#MongoDB基础命令" class="headerlink" title="MongoDB基础命令"></a>MongoDB基础命令</h3><p><img src="http://okmneu7zl.bkt.clouddn.com/WX20170131-135808.png"><br>因为我们后期基本不会在shell里来操作，所有这里只讲几个基本的，下面的test可以随意命名，是集合名   </p><ul><li><code>db.test.insert()</code>在集合中插入一条数据   </li><li><code>db.test.find()</code>查找集合中所有的，可以加入参数，如<code>db.test.find(&#123;name:&quot;Jimmy&quot;&#125;)</code>  </li><li><code>db.test.remove(&#123;&#125;)</code>删除集合中所有元素，<code>&#123;&#125;</code>必须写   </li><li><code>show collections</code>查看所有集合   </li></ul><h3 id="mongoose的安装"><a href="#mongoose的安装" class="headerlink" title="mongoose的安装"></a>mongoose的安装</h3><p>新建一个文件夹，通过<code>npm init</code>初始化，通过<code>npm install mongoose --save</code>安装mongoose<br><img src="http://okmneu7zl.bkt.clouddn.com/WX20170131-142334.png">   </p><h3 id="通过mongoose连接数据库"><a href="#通过mongoose连接数据库" class="headerlink" title="通过mongoose连接数据库"></a>通过mongoose连接数据库</h3><p>新建一个js文件，复制以下代码并在shell运行<code>node xxx.js</code>，xxx为你的文件名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行之后在之前的mongod的tab中看到有了一个新的连接   </p><h2 id="Mongoose入门"><a href="#Mongoose入门" class="headerlink" title="Mongoose入门"></a>Mongoose入门</h2><h3 id="创建类Class的方式"><a href="#创建类Class的方式" class="headerlink" title="创建类Class的方式"></a>创建类Class的方式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>,userSchema)</span><br></pre></td></tr></table></figure><p><code>&quot;User&quot;</code>表示类名，在数据库中集合名会自动转化为小写加s<code>users</code>      </p><p><code>userSchema</code>定义了对象的原型   ·</p><p><em><strong>举个栗子</strong></em>      </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line">userSchema = <span class="keyword">new</span> mongoose.Schema(&#123;  <span class="comment">//如果只需要指定类型的话可以直接写，如果需要其他条件，需要写成对象的形式</span></span><br><span class="line">    name:<span class="built_in">String</span>,</span><br><span class="line">    qq:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        <span class="keyword">default</span>:<span class="string">&quot;740534248&quot;</span> <span class="comment">//默认</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>,userSchema)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = <span class="keyword">new</span> User(&#123;</span><br><span class="line">    name:<span class="string">&quot;YongMaple&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line">user.save()</span><br></pre></td></tr></table></figure><h3 id="指定对象的属性类型"><a href="#指定对象的属性类型" class="headerlink" title="指定对象的属性类型"></a>指定对象的属性类型</h3><ul><li><p>javascript内置类型</p><ul><li>String</li><li>Number</li><li>Boolean</li><li>Date</li><li>Array   </li></ul></li><li><p>node.js内置类型</p><ul><li>Buffer</li></ul></li><li><p>mongoose特有类型</p><ul><li>Mixed</li><li>ObjectId</li></ul></li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose  = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ObjSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    str : <span class="built_in">String</span>,</span><br><span class="line">    num : <span class="built_in">Number</span>,</span><br><span class="line">    bool : <span class="built_in">Boolean</span>,</span><br><span class="line">    arr : <span class="built_in">Array</span>,    <span class="comment">//[]</span></span><br><span class="line">    arr2 : [<span class="built_in">Date</span>],</span><br><span class="line">    arr3 : [<span class="built_in">String</span>],</span><br><span class="line">    time : <span class="built_in">Date</span>,</span><br><span class="line"></span><br><span class="line">    buf : Buffer,</span><br><span class="line"></span><br><span class="line">    mxo : mongoose.Schema.Types.Mixed,  <span class="comment">//&#123;&#125;    混合数据类型</span></span><br><span class="line">    oid : mongoose.Schema.Types.ObjectId    <span class="comment">//唯一的</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> obj = mongoose.model(<span class="string">&quot;obj&quot;</span>,ObjSchema)</span><br><span class="line"><span class="keyword">const</span> o = <span class="keyword">new</span> obj(&#123;</span><br><span class="line">    time : <span class="keyword">new</span> <span class="built_in">Date</span>( <span class="number">42342342344</span>),  <span class="comment">//内部自动转化为Date类型，转化失败将报错</span></span><br><span class="line">    arr3 : [<span class="number">1234</span>,<span class="string">&quot;jimmy&quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>],     <span class="comment">//内部自动转化 String</span></span><br><span class="line">    buf : <span class="keyword">new</span> Buffer([<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>]),</span><br><span class="line"></span><br><span class="line">    oid : mongoose.Types.ObjectId()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">o.save(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="自定义类型"><a href="#自定义类型" class="headerlink" title="自定义类型"></a>自定义类型</h3><p>使用自定义类型，需要：</p><ul><li>继承mongoose.SchemaType(key,options,typeName)</li><li>重写cast(value)方法</li><li>加入mongoose.Schema.Types</li></ul><p><em><strong>举个栗子</strong></em><br>创建User.js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//es5版</span></span><br><span class="line"><span class="comment">// function User(key,options)&#123;</span></span><br><span class="line"><span class="comment">//     mongoose.SchemaType.call(this,key,options,&quot;User&quot;)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// User.prototype = Object.create(mongoose.SchemaType.prototype)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// User.prototype.cast = function(val)&#123;</span></span><br><span class="line"><span class="comment">//     if(val.loginname &amp;&amp; val.password &amp;&amp; val.loginname.length &gt; 3)&#123;</span></span><br><span class="line"><span class="comment">//         return &#123;</span></span><br><span class="line"><span class="comment">//             loginname : val.loginname,</span></span><br><span class="line"><span class="comment">//             password : val.password</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;else&#123;</span></span><br><span class="line"><span class="comment">//         throw new Error(&quot;user has error!&quot;)</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// mongoose.Schema.Types.User = User;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// module.exports = User;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//es6版</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">mongoose</span>.<span class="title">SchemaType</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">key,opts</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(key,opts,<span class="string">&quot;User&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">cast</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(val.loginname &amp;&amp; val.password &amp;&amp; val.loginname.length &gt; <span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                loginname : val.loginname,</span><br><span class="line">                password : val.password</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;user has error!&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再创建一个demo.js文件来使用上面的User.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> User = <span class="built_in">require</span>(<span class="string">&quot;./User&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> People = mongoose.model(<span class="string">&quot;People&quot;</span>,<span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    user:User</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> o = <span class="keyword">new</span> People(&#123;</span><br><span class="line">    user:&#123;</span><br><span class="line">        loginname:<span class="string">&quot;jimmy&quot;</span>,</span><br><span class="line">        password:<span class="string">&quot;123456&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">o.save(<span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">err,result</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="所有类型都具有的配置"><a href="#所有类型都具有的配置" class="headerlink" title="所有类型都具有的配置"></a>所有类型都具有的配置</h3><ul><li>强制不得为空（验证器）   <ul><li>required:true</li></ul></li><li>设置属性默认值   <ul><li>default:”qq740534248”</li></ul></li><li>是否包括在查询结果中   <ul><li>select:false</li></ul></li><li>getter 和 setter 拦截器   <ul><li>get:v =&gt; v   </li><li>set:v =&gt; v   </li></ul></li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Obj = mongoose.model(<span class="string">&quot;Obj&quot;</span>,<span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    str:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        <span class="keyword">default</span>:<span class="string">&quot;YongMaple&quot;</span>,</span><br><span class="line">        <span class="function"><span class="title">get</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">`my name is <span class="subst">$&#123;v&#125;</span>`</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="function"><span class="title">set</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">123</span>+v</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    loginname:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        required:<span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    str2:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        select:<span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> o = <span class="keyword">new</span> Obj(&#123;</span><br><span class="line">    str:<span class="string">&quot;Jimmy&quot;</span>,</span><br><span class="line">    str2:<span class="string">&quot;111111&quot;</span>,</span><br><span class="line">    loginname:<span class="string">&quot;333333&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(o.str);     <span class="comment">//my name is 123Jimmy</span></span><br><span class="line"></span><br><span class="line">o.save(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    Obj.findOne(&#123;&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,result</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(result);    <span class="comment">//&#123; _id: 58993a84a184201ce8ebf5f5, __v: 0, str: &#x27;123Jimmy&#x27; &#125;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对属性的验证和转换"><a href="#对属性的验证和转换" class="headerlink" title="对属性的验证和转换"></a>对属性的验证和转换</h3><p><strong>验证</strong></p><ul><li>枚举<ul><li>enum:Array</li></ul></li><li>正则表达式验证<ul><li>match</li></ul></li><li>限制字符串最大和最小长度<ul><li>maxlength &amp; minlength   </li></ul></li><li>Number和Date的最大最小值<ul><li>max &amp; min   </li></ul></li></ul><p><strong>转换</strong></p><ul><li>字母大小写转化<ul><li>lowercase &amp; uppercase</li></ul></li><li>去除字符串前后空白字符<ul><li>trim:true/false</li></ul></li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose =<span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> baseDateNum = <span class="built_in">Date</span>.now()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Obj = mongoose.model(<span class="string">&quot;Obj&quot;</span>,<span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line"></span><br><span class="line">    str:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        enum:[<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;bbb&quot;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    qq:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        match:<span class="regexp">/^\d*$/</span>,</span><br><span class="line">        maxlength:<span class="number">20</span>,</span><br><span class="line">        minlength:<span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    lowerstr:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        lowercase:<span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    upperstr:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        uppercase:<span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    trimstr:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        trim:<span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    num:&#123;</span><br><span class="line">        type:<span class="built_in">Number</span>,</span><br><span class="line">        min:<span class="number">6</span>,</span><br><span class="line">        max:<span class="number">20</span></span><br><span class="line">    &#125;,</span><br><span class="line">    date:&#123;</span><br><span class="line">        type:<span class="built_in">Date</span>,</span><br><span class="line">        min:<span class="keyword">new</span> <span class="built_in">Date</span>(baseDateNum - <span class="number">1000</span>),</span><br><span class="line">        max:<span class="keyword">new</span> <span class="built_in">Date</span>(baseDateNum + <span class="number">2000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> o = <span class="keyword">new</span> Obj(&#123;</span><br><span class="line">    str:<span class="string">&quot;bbb&quot;</span>,</span><br><span class="line">    qq:<span class="string">&quot;740534248&quot;</span>,</span><br><span class="line">    lowerstr:<span class="string">&quot;aaaAAAA&quot;</span>,</span><br><span class="line">    upperstr:<span class="string">&quot;bbbBBBB&quot;</span>,</span><br><span class="line">    trimstr:<span class="string">&quot;    aaa  aaff&quot;</span>,</span><br><span class="line">    num:<span class="number">6</span>,</span><br><span class="line">    date:<span class="keyword">new</span> <span class="built_in">Date</span>(baseDateNum+<span class="number">1000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(o);</span><br><span class="line"><span class="keyword">const</span> err = o.validateSync()    <span class="comment">//同步校验，后面会讲</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(err);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义验证器"><a href="#自定义验证器" class="headerlink" title="自定义验证器"></a>自定义验证器</h3><p>有三种方式来自定义验证器</p><ul><li>validate:{ validator:Function }</li><li>Class.schema.path(xxx).validate(fn)    //xxx 表示要获取的属性名，然后对其验证</li><li>validator(v,[callback])同步验证器，加入第二个参数callback变为异步验证器   </li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>,<span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    name:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        <span class="comment">// validate:&#123;   //同步验证器，也可以是数组形式，同时多个验证器</span></span><br><span class="line">        <span class="comment">//     validator(value)&#123;</span></span><br><span class="line">        <span class="comment">//         return value.length &lt;= 9</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line">User.schema.path(<span class="string">&quot;name&quot;</span>).validate(<span class="function"><span class="keyword">function</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> v.length &lt;= <span class="number">9</span></span><br><span class="line">&#125;)</span><br><span class="line">User.schema.path(<span class="string">&quot;name&quot;</span>).validate(<span class="function"><span class="keyword">function</span>(<span class="params">v</span>)</span>&#123;  <span class="comment">//可以加入多个</span></span><br><span class="line">    <span class="keyword">return</span> v.length &gt; <span class="number">3</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> u = <span class="keyword">new</span> User(&#123;</span><br><span class="line">    name:<span class="string">&quot;1234&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> err = u.validateSync()</span><br><span class="line"><span class="built_in">console</span>.log(err);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em><strong>再举个异步的栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>,<span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    loginname:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        validate:&#123;</span><br><span class="line">            <span class="function"><span class="title">validator</span>(<span class="params">value,cb</span>)</span>&#123;</span><br><span class="line">                User.findOne(&#123;<span class="attr">loginname</span>:value&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,result</span>)</span>&#123;</span><br><span class="line">                    cb(!result)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> user = <span class="keyword">new</span> User(&#123;</span><br><span class="line">    loginname:<span class="string">&quot;hahahaha&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line">user.save(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);   <span class="comment">//运行2遍，第二遍会抛出异常</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="获取错误信息"><a href="#获取错误信息" class="headerlink" title="获取错误信息"></a>获取错误信息</h3><ul><li>doc.validate( error =&gt; error )    <em><strong>异步获得错误信息</strong></em></li><li>error = doc.validateSync()        <em><strong>获取同步错误信息</strong></em></li><li>doc.save( error =&gt; error )        <em><strong>回调获得错误信息</strong></em></li><li>promise = doc.save()              <em><strong>promise方式获得错误信息</strong></em></li><li>Class.update( query , update , { runValidators:true } , callback)   </li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>,<span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    loginname:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        required:<span class="literal">true</span>,</span><br><span class="line">        validate:&#123;</span><br><span class="line">            <span class="function"><span class="title">validator</span>(<span class="params">value,cb</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    cb(<span class="literal">false</span>)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> u = <span class="keyword">new</span> User(&#123;</span><br><span class="line">    loginname:<span class="string">&quot;aaa11&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//1 只能获得同步</span></span><br><span class="line"><span class="keyword">const</span> err = u.validateSync()</span><br><span class="line"><span class="built_in">console</span>.log(err);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2 同步异步都能</span></span><br><span class="line"><span class="comment">// u.validate(function(err)&#123;</span></span><br><span class="line"><span class="comment">//     console.log(err);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3 同步异步都能  有可能是底层传上来的错误</span></span><br><span class="line"><span class="comment">// u.save(function(err)&#123;</span></span><br><span class="line"><span class="comment">//     console.log(err);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4 同步异步都能  有可能是底层传上来的错误</span></span><br><span class="line"><span class="comment">// const promise = u.save()</span></span><br><span class="line"><span class="comment">// promise.catch(err =&gt; console.log(err))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//5 同步异步都能  有可能是底层传上来的错误</span></span><br><span class="line"><span class="comment">// User.update(&#123;&#125;,&#123;loginname:&quot;123aaa&quot;&#125;,&#123;runValidators:true&#125;,function(err)&#123;</span></span><br><span class="line"><span class="comment">//     console.log(err);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br></pre></td></tr></table></figure><h3 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h3><ul><li>err.errors    <em><strong>错误集合</strong></em></li><li>err.errors.qq   <em><strong>得到qq属性值的错误信息</strong></em></li><li>{ path , value , message } = err.errors.qq   </li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>,<span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    loginname:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        required:[<span class="literal">true</span>,<span class="string">&quot;必须输入 &#123;PATH&#125; - &#123;VALUE&#125;&quot;</span>], <span class="comment">//除了enum以外所有内置验证器都是这样写</span></span><br><span class="line">        enum:&#123;<span class="attr">values</span>:[<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;bbb&quot;</span>],<span class="attr">message</span>:<span class="string">&quot;没在枚举中。。。 &#123;PATH&#125; - &#123;VALUE&#125;&quot;</span>&#125;,     <span class="comment">//枚举时，自定义错误信息比较特殊，是对象形式</span></span><br><span class="line">        validate:&#123;      <span class="comment">//自定义校验器要这样写，也是对象</span></span><br><span class="line">            <span class="function"><span class="title">validator</span>(<span class="params">value,cb</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    cb(<span class="literal">false</span>)   <span class="comment">//模拟异步错误</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            message:<span class="string">&quot;校验错误 &#123;PATH&#125; - &#123;VALUE&#125;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    password:&#123;</span><br><span class="line">        type:<span class="built_in">String</span>,</span><br><span class="line">        required:[<span class="literal">true</span>,<span class="string">&quot;密码必须填写&quot;</span>],</span><br><span class="line">        minlength:[<span class="number">6</span>,<span class="string">&quot;密码至少6位&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> u = <span class="keyword">new</span> User(&#123;</span><br><span class="line">    loginname:<span class="string">&quot;aaa11&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">u.validate(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line"><span class="comment">//     const &#123;path,value,message&#125; = err.errors.loginname</span></span><br><span class="line"><span class="comment">//     console.log(path);</span></span><br><span class="line"><span class="comment">//     console.log(value);</span></span><br><span class="line"><span class="comment">//     console.log(message);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(err &amp;&amp; err.errors)&#123;</span><br><span class="line">        <span class="keyword">const</span> keys = <span class="built_in">Object</span>.keys(err.errors)</span><br><span class="line">        <span class="keyword">let</span> str = <span class="string">&quot;&quot;</span></span><br><span class="line">        keys.map(<span class="function">(<span class="params">v,i</span>) =&gt;</span> &#123;</span><br><span class="line">            str += <span class="string">`<span class="subst">$&#123;v&#125;</span>:<span class="subst">$&#123;err.errors[v]&#125;</span>\n`</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">console</span>.log(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//....</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>例子中<code>&#123;PATH&#125;</code>和<code>&#123;VALUE&#125;</code>是属性名和属性值</p><h3 id="加入方法"><a href="#加入方法" class="headerlink" title="加入方法"></a>加入方法</h3><ul><li>加入实例方法 schema.methods.xxx</li><li>加入静态方法 schema.statics.xxx</li><li>加入虚拟方法 getter/setter方法<ul><li>virtual(‘xxx’).get(handle)   </li><li>virtual(‘xxx’).set(handle)   </li></ul></li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> userSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    firstName: <span class="built_in">String</span>,</span><br><span class="line">    secondName: <span class="built_in">String</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//methods和statics的区别在于this是谁</span></span><br><span class="line">userSchema.methods.getAllName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&#x27;.&#x27;</span> + <span class="built_in">this</span>.secondName   <span class="comment">//这里的this指的是对象本身</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">userSchema.statics.getAll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;             <span class="comment">//可以加入回调函数  function(cb)&#123;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.find(&#123;&#125;)     <span class="comment">//这里的this指的是User类   可以加入回调函数  this.find(&#123;&#125;,cb)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">userSchema.virtual(<span class="string">&quot;allname&quot;</span>).get(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&#x27;.&#x27;</span> + <span class="built_in">this</span>.secondName</span><br><span class="line">&#125;)  <span class="comment">//getter method</span></span><br><span class="line"></span><br><span class="line">userSchema.virtual(<span class="string">&quot;allname&quot;</span>).set(<span class="function"><span class="keyword">function</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//Yong.Maple</span></span><br><span class="line">    <span class="keyword">const</span> names = v.split(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.firstName = names[<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">this</span>.secondName = names[<span class="number">1</span>];</span><br><span class="line">&#125;);  <span class="comment">//setter method</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>,userSchema)</span><br><span class="line"></span><br><span class="line"><span class="comment">// const u = new User(&#123;</span></span><br><span class="line"><span class="comment">//     firstName:&quot;Yong &quot;,</span></span><br><span class="line"><span class="comment">//     secondName:&quot;Maple&quot;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// console.log(u.getAllName());</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// User.remove(&#123;&#125;).then(()=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     User.insertMany([</span></span><br><span class="line"><span class="comment">//         &#123;firstName:&quot;Yong&quot;,secondName:&quot;Maple&quot;&#125;,</span></span><br><span class="line"><span class="comment">//         &#123;firstName:&quot;Zhang&quot;,secondName:&quot;San&quot;&#125;,</span></span><br><span class="line"><span class="comment">//         &#123;firstName:&quot;Li&quot;,secondName:&quot;Si&quot;&#125;</span></span><br><span class="line"><span class="comment">//     ]).then(()=&gt;&#123;</span></span><br><span class="line"><span class="comment">//         User.getAll().then(result=&gt; console.log(result))</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = <span class="keyword">new</span> User(&#123;</span><br><span class="line">    allname:<span class="string">&quot;Yong.Maple&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line">user.save()</span><br><span class="line"><span class="built_in">console</span>.log(user);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对象的增删改"><a href="#对象的增删改" class="headerlink" title="对象的增删改"></a>对象的增删改</h3><ul><li>obj.save / Class.create / Class.insertMany</li><li>obj.remove / Class.remove</li><li>obj.update / Class.update    </li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>,&#123;</span><br><span class="line">    name:&#123;<span class="attr">type</span>:<span class="built_in">String</span>,<span class="attr">maxlength</span>:<span class="number">10</span>&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">User.remove(&#123;&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// --------------save</span></span><br><span class="line">    <span class="comment">// const user = new User(&#123;name:&quot;JiaYongfeng&quot;&#125;)</span></span><br><span class="line">    <span class="comment">// const promise = user.save()</span></span><br><span class="line">    <span class="comment">// promise</span></span><br><span class="line">    <span class="comment">// .then(u =&gt; console.log(u))</span></span><br><span class="line">    <span class="comment">// .catch(err =&gt; console.log(err))</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// user.save(function (err,u)&#123;</span></span><br><span class="line">    <span class="comment">//     console.log(err,u);</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// --------------create     成功的保存，失败的抛出异常</span></span><br><span class="line">    <span class="comment">// User.create(&#123;name:&quot;Jia&quot;&#125;,&#123;name:&quot;Yong&quot;&#125;)</span></span><br><span class="line">    <span class="comment">// .then(function(u1,u2)&#123;</span></span><br><span class="line">    <span class="comment">//     console.log(u1,u2);</span></span><br><span class="line">    <span class="comment">// &#125;).catch(err =&gt; console.log(err))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// User.create([&#123;name:&quot;Jia&quot;&#125;,&#123;name:&quot;Yong1111&quot;&#125;])</span></span><br><span class="line">    <span class="comment">// .then(function(arr)&#123;</span></span><br><span class="line">    <span class="comment">//     console.log(arr);</span></span><br><span class="line">    <span class="comment">// &#125;).catch(err =&gt; console.log(err))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ------------------insertMany     必须是数组，一条失败，全部失败</span></span><br><span class="line">    <span class="comment">// User.insertMany([&#123;name:&quot;Jia&quot;&#125;,&#123;name:&quot;Yong&quot;&#125;])</span></span><br><span class="line">    <span class="comment">// .then(function(arr)&#123;</span></span><br><span class="line">    <span class="comment">//     console.log(arr);</span></span><br><span class="line">    <span class="comment">// &#125;).catch(err =&gt; console.log(err))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// --------------------remove</span></span><br><span class="line">    <span class="comment">// User.insertMany([&#123;name:&quot;Jia22&quot;&#125;,&#123;name:&quot;Jia33&quot;&#125;,&#123;name:&quot;Jiasasd&quot;&#125;,&#123;name:&quot;Yong&quot;&#125;])</span></span><br><span class="line">    <span class="comment">// .then(function(arr)&#123;</span></span><br><span class="line">    <span class="comment">//     User.remove(&#123;name:/^Jia\d*$/&#125;).then(r =&gt; console.log(r))</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// User.remove(&#123;name:&quot;Jia&quot;&#125;).then(r =&gt; console.log(r))</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// arr[0].remove()</span></span><br><span class="line">        <span class="comment">//     .then(obj =&gt; User.create(&#123;name:obj.name + &quot; ----- reborn&quot;&#125;))</span></span><br><span class="line">        <span class="comment">//     .catch(err =&gt; console.log(err))</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// arr[0].remove(function(err,obj)&#123;</span></span><br><span class="line">        <span class="comment">//     console.log(err,obj);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#125;).catch(err =&gt; console.log(err))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// -----------------------update</span></span><br><span class="line">    User.insertMany([&#123;<span class="attr">name</span>:<span class="string">&quot;Jia22&quot;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;Jia33&quot;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;Jiasasd&quot;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;Yong&quot;</span>&#125;])</span><br><span class="line">    .then(<span class="function"><span class="keyword">function</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        User.update(&#123;&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;YongFeng&quot;</span>&#125;,&#123;<span class="attr">multi</span>:<span class="literal">true</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,result</span>)</span>&#123;      <span class="comment">//默认只修改第一个符合条件的值,需要修改多个要加&#123;multi:true&#125;</span></span><br><span class="line">            <span class="built_in">console</span>.log(err,result);</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// console.log(&quot;before update  ==&gt;&quot;,arr[0]);</span></span><br><span class="line">        <span class="comment">// arr[0].update(&#123;name:&quot;123123123123fsdsdfddfsdfdsasdas&quot;&#125;,&#123;runValidators:true&#125;).then(function(result)&#123;</span></span><br><span class="line">        <span class="comment">//     console.log(result);</span></span><br><span class="line">        <span class="comment">// &#125;).catch(err =&gt; console.log(err))</span></span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> <span class="built_in">console</span>.log(err))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="字段更改参数"><a href="#字段更改参数" class="headerlink" title="字段更改参数"></a>字段更改参数</h3><ul><li>$inc 加法运算</li><li>$mul 乘法运算</li><li>$min / $max 数值和日期的限定</li><li>$currentDate 设定当前日期</li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Topic = mongoose.model(<span class="string">&quot;Topic&quot;</span>, <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    title: &#123;</span><br><span class="line">        type: <span class="built_in">String</span>,</span><br><span class="line">        required: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    body: &#123;</span><br><span class="line">        type: <span class="built_in">String</span>,</span><br><span class="line">        required: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    money: &#123;</span><br><span class="line">        type: <span class="built_in">Number</span>,</span><br><span class="line">        <span class="keyword">default</span>: <span class="number">0.5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    accessNum: &#123;</span><br><span class="line">        type: <span class="built_in">Number</span>,</span><br><span class="line">        <span class="keyword">default</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    createTime: <span class="built_in">Date</span>,</span><br><span class="line">    updateTime: <span class="built_in">Date</span></span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line">Topic.remove(&#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="built_in">Date</span></span><br><span class="line">    <span class="keyword">var</span> topic = <span class="keyword">new</span> Topic(&#123;</span><br><span class="line">        title: <span class="string">&quot;aa&quot;</span>,</span><br><span class="line">        body: <span class="string">&quot;content&quot;</span>,</span><br><span class="line">        createTime: date,</span><br><span class="line">        updateTime: date</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    topic.save(<span class="function"><span class="keyword">function</span>(<span class="params">err, result</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        Topic.update(&#123;&#125;, &#123;</span><br><span class="line">            title: <span class="string">&quot;my js&quot;</span>,</span><br><span class="line"></span><br><span class="line">            $currentDate:&#123;  <span class="comment">//使用当前时间修改updateTime的值</span></span><br><span class="line">                updateTime:<span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            $min: &#123; <span class="comment">//最小值，和平时理解的不一样，必须小于15，不超过15变成15</span></span><br><span class="line">                accessNum: <span class="number">15</span>   <span class="comment">//15</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// $max: &#123; //最大值，和平时理解的不一样，必须大于15，不满15变成15</span></span><br><span class="line">            <span class="comment">//     accessNum: 15   //15</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//每个参数只能在一个算法当中</span></span><br><span class="line">            <span class="comment">// $mul: &#123; //乘</span></span><br><span class="line">            <span class="comment">//     money: 3    //1.5</span></span><br><span class="line">            <span class="comment">// &#125;,</span></span><br><span class="line">            <span class="comment">// $inc: &#123; //加</span></span><br><span class="line">            <span class="comment">//     accessNum: 2    //2</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组类型字段的更改参数"><a href="#数组类型字段的更改参数" class="headerlink" title="数组类型字段的更改参数"></a>数组类型字段的更改参数</h3><ul><li>$pop 删除一条数据</li><li>$addToSet 添加去重数据</li><li>$pull / $pullAll 清除</li><li>$push 加入数据</li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Topic = mongoose.model(<span class="string">&quot;Topic&quot;</span>, &#123;</span><br><span class="line">    arr: []</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">Topic.remove(&#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    Topic.create(&#123;</span><br><span class="line">        arr: [<span class="number">11</span>, <span class="number">22</span>,<span class="number">11</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>]</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  $pop删除一个</span></span><br><span class="line">        <span class="comment">// Topic.update(&#123;&#125;, &#123;</span></span><br><span class="line">        <span class="comment">//     $pop: &#123;</span></span><br><span class="line">        <span class="comment">//         arr: 1  //[11, 22, 33, 44, 55]  正数从后往前，负数从前往后</span></span><br><span class="line">        <span class="comment">//         //arr: -1 //[ 22, 33, 44, 55, 66]</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;).exec()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  $addToSet添加不重复</span></span><br><span class="line">        <span class="comment">// Topic.update(&#123;&#125;, &#123;</span></span><br><span class="line">        <span class="comment">//     $addToSet: &#123;</span></span><br><span class="line">        <span class="comment">//         // arr: 66     //如果重复，无法添加</span></span><br><span class="line">        <span class="comment">//         // arr: [77,88]    //[11, 22, 33, 44, 55, 66, [77,88]]并不是预期的效果</span></span><br><span class="line">        <span class="comment">//         arr: &#123;</span></span><br><span class="line">        <span class="comment">//             $each: [77, 88]     //[ 11, 22, 33, 44, 55, 66, 77, 88 ]</span></span><br><span class="line">        <span class="comment">//         &#125;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;).exec()</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  $pull删除一种数据</span></span><br><span class="line">        <span class="comment">// Topic.update(&#123;&#125;,&#123;</span></span><br><span class="line">        <span class="comment">//     $pull:&#123;</span></span><br><span class="line">        <span class="comment">//         arr:11  //[ 22, 33, 44, 55, 66 ]</span></span><br><span class="line">        <span class="comment">//         // arr:[11,22] //无效的</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;).exec()</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  $pullAll删除多种数据</span></span><br><span class="line">        <span class="comment">// Topic.update(&#123;&#125;,&#123;</span></span><br><span class="line">        <span class="comment">//     $pullAll:&#123;</span></span><br><span class="line">        <span class="comment">//         arr:[11,22]  //[ 33, 44, 55, 66 ]</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;).exec()</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  $push添加数据，可以重复</span></span><br><span class="line">        Topic.update(&#123;&#125;,&#123;</span><br><span class="line">            $push:&#123;</span><br><span class="line">                <span class="comment">// arr:66  //[ 11, 22, 11, 33, 44, 55, 66, 66 ]</span></span><br><span class="line">                arr:&#123;</span><br><span class="line">                    $each: [<span class="number">77</span>, <span class="number">88</span>],</span><br><span class="line">                    $position:<span class="number">0</span>,     <span class="comment">//从指定位置开始添加[ 77, 88, 11, 22, 11, 33, 44, 55, 66 ]</span></span><br><span class="line">                    $slice:-<span class="number">3</span>        <span class="comment">//截取数组，正数从前截取，负数从后截取</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).exec()</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对象的基础查询"><a href="#对象的基础查询" class="headerlink" title="对象的基础查询"></a>对象的基础查询</h3><ul><li>find(conditions , [projection] , [options] , [callback])</li><li>findById</li><li>findByIdAndRemove / findByIdAndUpdate</li><li>findOne</li><li>findOneAndRemove / findOneAndUpdate</li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Topic = mongoose.model(<span class="string">&quot;Topic&quot;</span>, &#123;</span><br><span class="line">    name: &#123;</span><br><span class="line">        type: <span class="built_in">String</span>,</span><br><span class="line">        maxlength: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">    arr.push(&#123;</span><br><span class="line">        name: <span class="string">&quot;Jimmy&quot;</span> + i</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">Topic.remove(&#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Topic.create(arr).then(<span class="function"><span class="keyword">function</span>(<span class="params">objs</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> id = objs[<span class="number">0</span>].id</span><br><span class="line">        <span class="comment">// Topic.findById(id, function(err, t) &#123;</span></span><br><span class="line">        <span class="comment">//     console.log(t);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Topic.findByIdAndRemove(id, function(err, t) &#123;</span></span><br><span class="line">        <span class="comment">//     console.log(t);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Topic.findByIdAndUpdate(id, &#123;</span></span><br><span class="line">        <span class="comment">//     name: &quot;hahahaha111111111&quot;</span></span><br><span class="line">        <span class="comment">// &#125;, &#123;</span></span><br><span class="line">        <span class="comment">//     runValidators: true</span></span><br><span class="line">        <span class="comment">// &#125;, function(err, t) &#123;</span></span><br><span class="line">        <span class="comment">//     console.log(err, t);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="comment">// 上面这个和这个一样的效果</span></span><br><span class="line">        <span class="comment">// Topic.findByIdAndUpdate(id, &#123;</span></span><br><span class="line">        <span class="comment">//     name: &quot;hahahaha111111111&quot;</span></span><br><span class="line">        <span class="comment">// &#125;, &#123;</span></span><br><span class="line">        <span class="comment">//     runValidators: true</span></span><br><span class="line">        <span class="comment">// &#125;).then(function(t) &#123;</span></span><br><span class="line">        <span class="comment">//     console.log(t);</span></span><br><span class="line">        <span class="comment">// &#125;).catch(err =&gt; console.log(err))</span></span><br><span class="line">        <span class="comment">// 效果还是一样的，错误交由外部处理</span></span><br><span class="line">        <span class="comment">// return Topic.findByIdAndUpdate(id, &#123;</span></span><br><span class="line">        <span class="comment">//     name: &quot;hahahaha111111111&quot;</span></span><br><span class="line">        <span class="comment">// &#125;, &#123;</span></span><br><span class="line">        <span class="comment">//     runValidators: true</span></span><br><span class="line">        <span class="comment">// &#125;).then(function(t) &#123;</span></span><br><span class="line">        <span class="comment">//     console.log(t);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Topic.findOne(&#123;name:/^Jimmy1\d$/&#125;,function(err,t)&#123;  //返回满足条件的第一个</span></span><br><span class="line">        <span class="comment">//     console.log(t);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Topic.find(&#123;&#125;,function(err,ts)&#123;</span></span><br><span class="line">        <span class="comment">//     console.log(ts);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="comment">// Topic.find(&#123;name:/^Jimmy1\d$/&#125;,function(err,ts)&#123;</span></span><br><span class="line">        <span class="comment">//     console.log(ts);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="comment">// Topic.find(&#123;name:/^Jimmy1\d$/&#125;,&quot;_id name&quot;,function(err,ts)&#123;  //第二个参数决定返回结果带有的属性，用空格分割，如果在属性前加-，则表示不返回这个属性</span></span><br><span class="line">        <span class="comment">//     console.log(ts);</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        Topic.find(&#123;<span class="attr">name</span>:<span class="regexp">/^Jimmy1\d$/</span>&#125;,<span class="literal">null</span>,&#123;<span class="attr">skip</span>:<span class="number">5</span>,<span class="attr">limit</span>:<span class="number">3</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,ts</span>)</span>&#123; <span class="comment">//第三个参数是对结果的筛选，skip指跳过几个，limit指最多返回几个，结合这两个可以实现翻页功能</span></span><br><span class="line">            <span class="built_in">console</span>.log(ts);</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> <span class="built_in">console</span>.log(err))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="比较式查询"><a href="#比较式查询" class="headerlink" title="比较式查询"></a>比较式查询</h3><ul><li>大小判断<ul><li>$eq 等于</li><li>$gt 大于</li><li>$gte 大于等于</li><li>$lt 小于</li><li>$lte 小于等于</li></ul></li><li>$ne 不是</li><li>$in 包含</li><li>$nin 不包含</li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Topic = mongoose.model(<span class="string">&quot;Topic&quot;</span>, &#123;</span><br><span class="line">    name: &#123;</span><br><span class="line">        type: <span class="built_in">String</span>,</span><br><span class="line">        maxlength: <span class="number">10</span></span><br><span class="line">    &#125;,</span><br><span class="line">    num: <span class="built_in">Number</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">    arr.push(&#123;</span><br><span class="line">        name: <span class="string">&quot;Jimmy&quot;</span> + i,</span><br><span class="line">        num: i</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">Topic.remove(&#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Topic.create(arr).then(<span class="function"><span class="keyword">function</span>(<span class="params">objs</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        Topic.find(&#123;</span><br><span class="line">            num: &#123;</span><br><span class="line">                <span class="comment">// $lt: 20,    //小于20</span></span><br><span class="line">                <span class="comment">// $lte:20,    //小于等于20</span></span><br><span class="line">                <span class="comment">// $gt:10,      //大于10</span></span><br><span class="line">                <span class="comment">// $gte:10,     //大于等于10</span></span><br><span class="line">                <span class="comment">// $in: [11, 15], //值等于11或15</span></span><br><span class="line">                <span class="comment">// $nin: [11, 15], //值不等于11或15</span></span><br><span class="line">                <span class="comment">// $ne: 2, //不等于2的，只能一个值</span></span><br><span class="line">                $eq: <span class="number">2</span>, <span class="comment">//等于2的</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, ts</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(ts);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="逻辑式查询"><a href="#逻辑式查询" class="headerlink" title="逻辑式查询"></a>逻辑式查询</h3><ul><li>$or 或</li><li>$nor ($or相反)</li><li>$and 和</li><li>$not 否</li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Topic = mongoose.model(<span class="string">&quot;Topic&quot;</span>, &#123;</span><br><span class="line">    name: &#123;</span><br><span class="line">        type: <span class="built_in">String</span>,</span><br><span class="line">        maxlength: <span class="number">10</span></span><br><span class="line">    &#125;,</span><br><span class="line">    num: <span class="built_in">Number</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">    arr.push(&#123;</span><br><span class="line">        name: <span class="string">&quot;Jimmy&quot;</span> + i,</span><br><span class="line">        num: i</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">Topic.remove(&#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Topic.create(arr).then(<span class="function"><span class="keyword">function</span>(<span class="params">objs</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        Topic.find(&#123;</span><br><span class="line">            <span class="comment">// $or: [&#123;     //满足一个条件就会返回</span></span><br><span class="line">            <span class="comment">//     name: &quot;Jimmy1&quot;</span></span><br><span class="line">            <span class="comment">// &#125;, &#123;</span></span><br><span class="line">            <span class="comment">//     num: 4</span></span><br><span class="line">            <span class="comment">// &#125;,&#123;</span></span><br><span class="line">            <span class="comment">//     num: 6</span></span><br><span class="line">            <span class="comment">// &#125;]</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// $nor: [&#123;        //不满足所有条件就返回</span></span><br><span class="line">            <span class="comment">//     name: &quot;Jimmy1&quot;</span></span><br><span class="line">            <span class="comment">// &#125;, &#123;</span></span><br><span class="line">            <span class="comment">//     num: 4</span></span><br><span class="line">            <span class="comment">// &#125;, &#123;</span></span><br><span class="line">            <span class="comment">//     num: 6</span></span><br><span class="line">            <span class="comment">// &#125;]</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// $and: [&#123;        //满足所有条件才返回</span></span><br><span class="line">            <span class="comment">//     name: /^Jimmy1\d$/</span></span><br><span class="line">            <span class="comment">// &#125;, &#123;</span></span><br><span class="line">            <span class="comment">//     num: &#123;</span></span><br><span class="line">            <span class="comment">//         $lte:15</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// &#125;]</span></span><br><span class="line">            <span class="comment">// $and: [&#123;        //可以混合使用</span></span><br><span class="line">            <span class="comment">//     $or: [&#123;</span></span><br><span class="line">            <span class="comment">//         name: &quot;Jimmy1&quot;</span></span><br><span class="line">            <span class="comment">//     &#125;, &#123;</span></span><br><span class="line">            <span class="comment">//         num: 4</span></span><br><span class="line">            <span class="comment">//     &#125;, &#123;</span></span><br><span class="line">            <span class="comment">//         num: 6</span></span><br><span class="line">            <span class="comment">//     &#125;]</span></span><br><span class="line">            <span class="comment">// &#125;, &#123;</span></span><br><span class="line">            <span class="comment">//     num: 4</span></span><br><span class="line">            <span class="comment">// &#125;]</span></span><br><span class="line"></span><br><span class="line">            num: &#123;</span><br><span class="line">                $not: &#123; <span class="comment">//不满足条件的返回</span></span><br><span class="line">                    $gte: <span class="number">10</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, ts</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(ts);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组专用查询"><a href="#数组专用查询" class="headerlink" title="数组专用查询"></a>数组专用查询</h3><ul><li>$all 是否包含查询条件</li><li>$elemMatch 数组元素查询条件</li><li>$size 数组大小查询条件</li><li>$where 其他</li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"><span class="comment">//$all&amp;$elemMatch</span></span><br><span class="line"><span class="comment">// const Topic = mongoose.model(&quot;Topic&quot;, &#123;</span></span><br><span class="line"><span class="comment">//     arr: []</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//$all</span></span><br><span class="line"><span class="comment">// Topic.remove(&#123;&#125;, function() &#123;</span></span><br><span class="line"><span class="comment">//     Topic.create([&#123;</span></span><br><span class="line"><span class="comment">//             arr: [11, 22, 33]</span></span><br><span class="line"><span class="comment">//         &#125;,</span></span><br><span class="line"><span class="comment">//         &#123;</span></span><br><span class="line"><span class="comment">//             arr: [33, 44, 55]</span></span><br><span class="line"><span class="comment">//         &#125;,</span></span><br><span class="line"><span class="comment">//         &#123;</span></span><br><span class="line"><span class="comment">//             arr: [55, 66, 77, 88]</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     ]).then(function() &#123;</span></span><br><span class="line"><span class="comment">//         Topic.find(&#123;</span></span><br><span class="line"><span class="comment">//             arr: &#123;</span></span><br><span class="line"><span class="comment">//                 $all: [33, 44] //都存在的返回</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//         &#125;).then((result) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//             console.log(result);</span></span><br><span class="line"><span class="comment">//         &#125;)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//$elemMatch</span></span><br><span class="line"><span class="comment">// function generatorArr(size) &#123;</span></span><br><span class="line"><span class="comment">//     let arr = []</span></span><br><span class="line"><span class="comment">//     for (let i = 0; i &lt; size; i++) &#123;</span></span><br><span class="line"><span class="comment">//         arr.push(&#123;</span></span><br><span class="line"><span class="comment">//             name: &quot;Jimmy&quot; + i,</span></span><br><span class="line"><span class="comment">//             num: i</span></span><br><span class="line"><span class="comment">//         &#125;)</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     return arr</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Topic.remove(&#123;&#125;, function() &#123;</span></span><br><span class="line"><span class="comment">//     Topic.create([&#123;</span></span><br><span class="line"><span class="comment">//             arr: generatorArr(5)</span></span><br><span class="line"><span class="comment">//         &#125;,</span></span><br><span class="line"><span class="comment">//         &#123;</span></span><br><span class="line"><span class="comment">//             arr: generatorArr(10)</span></span><br><span class="line"><span class="comment">//         &#125;,</span></span><br><span class="line"><span class="comment">//         &#123;</span></span><br><span class="line"><span class="comment">//             arr: generatorArr(15)</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     ]).then(function() &#123;</span></span><br><span class="line"><span class="comment">//         Topic.find(&#123;</span></span><br><span class="line"><span class="comment">//             arr: &#123;</span></span><br><span class="line"><span class="comment">//                 // $elemMatch: &#123;       //匹配数组内部元素的数据</span></span><br><span class="line"><span class="comment">//                 //     name: &quot;Jimmy9&quot;</span></span><br><span class="line"><span class="comment">//                 // &#125;</span></span><br><span class="line"><span class="comment">//                 $size: 5        //匹配数组length</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//         &#125;).then((result) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//             console.log(result);</span></span><br><span class="line"><span class="comment">//         &#125;)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//$where</span></span><br><span class="line"><span class="keyword">const</span> Topic = mongoose.model(<span class="string">&quot;Topic&quot;</span>, &#123;</span><br><span class="line">    obj: &#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line">Topic.remove(&#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Topic.create([&#123;</span><br><span class="line">        obj: &#123;</span><br><span class="line">            name: <span class="string">&quot;java&quot;</span>,</span><br><span class="line">            num: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        obj: &#123;</span><br><span class="line">            name: <span class="string">&quot;javascript&quot;</span>,</span><br><span class="line">            num: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        obj: &#123;</span><br><span class="line">            name: <span class="string">&quot;nodejs&quot;</span>,</span><br><span class="line">            num: <span class="number">3</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        Topic.find(&#123;</span><br><span class="line">            <span class="comment">// $where: &quot;this.obj.name === &#x27;java&#x27;&quot;      //直接写js</span></span><br><span class="line">            $where: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="regexp">/^java\w*$/</span>.test(<span class="built_in">this</span>.obj.name) &amp;&amp; <span class="built_in">this</span>.obj.num === <span class="number">2</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="literal">null</span>, &#123; <span class="comment">//同样可以混合使用</span></span><br><span class="line">            limit: <span class="number">2</span>,</span><br><span class="line">            skip: <span class="number">0</span></span><br><span class="line">        &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(result);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Query查询风格"><a href="#Query查询风格" class="headerlink" title="Query查询风格"></a>Query查询风格</h3><p>另一种风格的写法，作为了解，下面例子将会改写上面的例子<br><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">Topic.create([&#123;</span><br><span class="line">        arr: [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        arr: [<span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        arr: [<span class="number">55</span>, <span class="number">66</span>, <span class="number">77</span>, <span class="number">88</span>]</span><br><span class="line">    &#125;</span><br><span class="line">]).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> query = Topic.find()</span><br><span class="line">    query.where(<span class="string">&quot;arr&quot;</span>)</span><br><span class="line">        .all([<span class="number">33</span>,<span class="number">44</span>])</span><br><span class="line">        .limit(<span class="number">3</span>)</span><br><span class="line">        .skip(<span class="number">10</span>)</span><br><span class="line">        .select(<span class="string">&quot;name age&quot;</span>)</span><br><span class="line">        .exec(<span class="function"><span class="keyword">function</span> (<span class="params">err,result</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(result)</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//elemMatch的query写法</span></span><br><span class="line">Topic.create([&#123;</span><br><span class="line">        arr: generatorArr(<span class="number">5</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        arr: generatorArr(<span class="number">10</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        arr: generatorArr(<span class="number">15</span>)</span><br><span class="line">    &#125;</span><br><span class="line">]).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Topic.find()</span><br><span class="line">    .where(<span class="string">&quot;arr&quot;</span>)</span><br><span class="line">    .elemMatch(&#123;<span class="attr">name</span>:<span class="string">&quot;Jimmy9&quot;</span>&#125;)</span><br><span class="line">    .exec(<span class="function"><span class="keyword">function</span> (<span class="params">err,result</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(result)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//另一种写法</span></span><br><span class="line">    Topic.find()</span><br><span class="line">    .where(<span class="string">&quot;arr&quot;</span>)</span><br><span class="line">    .elemMatch(<span class="function"><span class="keyword">function</span> (<span class="params">elem</span>)</span>&#123;</span><br><span class="line">        elem.where(<span class="string">&quot;name&quot;</span>).eq(<span class="string">&quot;Jimmy9&quot;</span>).where(<span class="string">&quot;num&quot;</span>).gte() ....</span><br><span class="line">    &#125;)</span><br><span class="line">    .exec(<span class="function"><span class="keyword">function</span> (<span class="params">err,result</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(result)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>具体可以查看文档<a href="http://mongoosejs.com/docs/queries.html">http://mongoosejs.com/docs/queries.html</a></p><h3 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h3><p>会触发中间件的：</p><ul><li>validate</li><li>doc.save</li><li>Class.create / Class.insertMany</li><li>doc.update</li><li>doc.remove</li><li>find</li><li>findOne</li><li>findAndRemove / findOneAndUpdate</li></ul><p><em><strong>举个栗子</strong></em>   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://localhost/test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    name: &#123;</span><br><span class="line">        type: <span class="built_in">String</span>,</span><br><span class="line">        maxlength: <span class="number">5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">userSchema.pre(<span class="string">&quot;validate&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;pre validate&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.errors);</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">userSchema.post(<span class="string">&quot;validate&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(this.errors?this.errors.name.message:this.errors);</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;post validate&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// userSchema.pre(&quot;save&quot;, function(next) &#123;</span></span><br><span class="line"><span class="comment">//     console.log(&quot;pre save one&quot;);</span></span><br><span class="line"><span class="comment">//     next()</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line">userSchema.pre(<span class="string">&quot;save&quot;</span>,<span class="literal">true</span>, <span class="function"><span class="keyword">function</span>(<span class="params">next,done</span>) </span>&#123;    <span class="comment">//默认不加true，加true表示并行,在执行完所有的pre之后在执行后面的，没什么卵用的功能，完全能用next来控制</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;pre save one&quot;</span>);</span><br><span class="line">    next()</span><br><span class="line">    <span class="built_in">setTimeout</span>(done,<span class="number">2000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">userSchema.pre(<span class="string">&quot;save&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;pre save two&quot;</span>);</span><br><span class="line">    <span class="built_in">setTimeout</span>(next,<span class="number">2000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">userSchema.post(<span class="string">&quot;save&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;post save&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">userSchema.pre(<span class="string">&quot;update&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;pre update&quot;</span>);</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">userSchema.post(<span class="string">&quot;update&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;post update&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">userSchema.pre(<span class="string">&quot;remove&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;pre remove&quot;</span>);</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line">userSchema.post(<span class="string">&quot;remove&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;post remove&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">&quot;User&quot;</span>, userSchema)</span><br><span class="line"></span><br><span class="line">User.remove(&#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> user = <span class="keyword">new</span> User(&#123;</span><br><span class="line">        name: <span class="string">&quot;Jia&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    user.save(<span class="function"><span class="keyword">function</span>(<span class="params">err, u</span>) </span>&#123;</span><br><span class="line">        u.update(&#123;</span><br><span class="line">            name: <span class="string">&quot;Jimmy&quot;</span></span><br><span class="line">        &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">            u.remove()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em><strong>END</strong></em></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Mongoose </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
            <tag> mongoose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IOS设置document.title无效的解决办法</title>
      <link href="2017/02/04/IOS%E8%AE%BE%E7%BD%AEdocument-title%E6%97%A0%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>2017/02/04/IOS%E8%AE%BE%E7%BD%AEdocument-title%E6%97%A0%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="问题原因："><a href="#问题原因：" class="headerlink" title="问题原因："></a>问题原因：</h2><p>因为浏览器首次加载页面初始化title后，就再也不监听 document.title的change事件。</p><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>修改title之后，给页面加上一个内容为空的iframe，随后立即删除这个iframe，这时候会刷新title。但是如果简单的这样设置，一般是会有闪动的，所以可以设置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">setTitle: <span class="function"><span class="keyword">function</span>(<span class="params">title</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> $body = $(<span class="string">&#x27;body&#x27;</span>)</span><br><span class="line">    <span class="built_in">document</span>.title = title</span><br><span class="line">    <span class="keyword">let</span> $iframe = $(<span class="string">&#x27;&lt;iframe src=&quot;/favicon.ico&quot;&gt;&lt;/iframe&gt;&#x27;</span>)</span><br><span class="line">    $iframe.on(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $iframe.off(<span class="string">&#x27;load&#x27;</span>).remove()</span><br><span class="line">      &#125;, <span class="number">0</span>)</span><br><span class="line">    &#125;).appendTo($body)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>参考地址：<a href="http://www.cnblogs.com/lihanying/p/6227192.html">http://www.cnblogs.com/lihanying/p/6227192.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> title </tag>
            
            <tag> ios </tag>
            
            <tag> 手机端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iTerm2配色修改</title>
      <link href="2017/02/04/iTerm2%E9%85%8D%E8%89%B2%E4%BF%AE%E6%94%B9/"/>
      <url>2017/02/04/iTerm2%E9%85%8D%E8%89%B2%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<ol><li>首先<code>sudo vim ~/.bash_profile</code>，输入密码后按e进入编辑，看别人的帖子是不需要sudo的。。。但是我需要</li><li>然后i进入编辑模式，加入下面这段，然后<code>esc</code>输入<code>:wq</code>保存   <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#enables colorin the terminal bash <span class="keyword">shell</span> export</span><br><span class="line">export CLICOLOR=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">#sets <span class="keyword">up</span> thecolor scheme <span class="keyword">for</span> <span class="keyword">list</span> export</span><br><span class="line">export LSCOLORS=gxfxcxdxbxegedabagacad</span><br><span class="line"></span><br><span class="line">#sets <span class="keyword">up</span> theprompt color (currently <span class="keyword">a</span> green similar <span class="keyword">to</span> linux terminal)</span><br><span class="line">export PS1=<span class="string">&#x27;\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;36m\]\w\[\033[00m\]\$ &#x27;</span></span><br><span class="line"></span><br><span class="line">#enables colorfor iTerm</span><br><span class="line">export TERM=xterm-color</span><br></pre></td></tr></table></figure></li><li>然后修改<code>preference-&gt;profiles-&gt;Terminal-&gt;xterm-new</code><br><img src="http://okmneu7zl.bkt.clouddn.com/WX20170204-095600.png">   </li><li>去挑选喜欢的配色方案，我在这里找的<a href="http://iterm2colorschemes.com/">http://iterm2colorschemes.com/</a></li><li>下载到你喜欢的配色后，导入<br><img src="http://okmneu7zl.bkt.clouddn.com/WX20170204-095639.png"><br>导入后选择你的配色，然后注销mac，再打开就发现配色变了，之后再换配色只要直接改就行了</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
            <tag> iTerm2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Retina视网膜屏幕适配</title>
      <link href="2017/01/19/Retina%E8%A7%86%E7%BD%91%E8%86%9C%E5%B1%8F%E5%B9%95%E9%80%82%E9%85%8D/"/>
      <url>2017/01/19/Retina%E8%A7%86%E7%BD%91%E8%86%9C%E5%B1%8F%E5%B9%95%E9%80%82%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#bbb</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.hairlines</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-width</span>: .<span class="number">5px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (<span class="built_in">window</span>.devicePixelRatio &amp;&amp; devicePixelRatio &gt;= <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> testElem = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        testElem.style.border = <span class="string">&#x27;.5px solid transparent&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.body.appendChild(testElem);</span></span><br><span class="line">        if (testElem.offsetHeight == 1)&#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.querySelector(<span class="string">&#x27;html&#x27;</span>).classList.add(<span class="string">&#x27;hairlines&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.body.removeChild(testElem);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>window.devicePixelRatio是设备上物理像素和设备独立像素(device-independent pixels (dips))的比例。<br>公式表示就是：window.devicePixelRatio = 物理像素 / dips  </p></blockquote><blockquote><p>offsetHeight = clientHeight + 滚动条 + 边框   </p></blockquote><p>如果是retina屏，会先创建个div来测试浏览器是否能探测到0.5px，如果可以会才会使用0.5px的样式   </p><p>原文地址：<a href="http://dieulot.net/css-retina-hairline">http://dieulot.net/css-retina-hairline</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手机端 </tag>
            
            <tag> 适配 </tag>
            
            <tag> Retina </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6-遍历对象属性</title>
      <link href="2017/01/19/ES6-%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7/"/>
      <url>2017/01/19/ES6-%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&#x27;leo&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">getName</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="built_in">this</span>.age = <span class="number">22</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">getAge</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="built_in">Symbol</span>(<span class="string">&#x27;fullname&#x27;</span>)]()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">B.prototype.getClass = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> B;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Object.keys 能够得到自身的可枚举的属性,但得不到原型链上的属性.</span></span><br><span class="line"><span class="comment">// 得不到 Symbols 属性</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(B.prototype));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Object.getOwnPropertyNames(b) 能够得到自身属性,</span></span><br><span class="line"><span class="comment">// 包括不可枚举的属性,但得不到原型链上的属性.</span></span><br><span class="line"><span class="comment">// 得不到 Symbols 属性</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyNames(B.prototype));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以得到自身的 Symbols 属性,包括不可枚举的属性.</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertySymbols(B.prototype));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以得到自身和继承的原型链上的属性,但必须是可枚举属性.</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> b)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断是否可枚举，enumerable为true可枚举</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(B.prototype,<span class="string">&#x27;getAge&#x27;</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ES6笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6-Object.assign</title>
      <link href="2017/01/19/ES6-Object-assign/"/>
      <url>2017/01/19/ES6-Object-assign/</url>
      
        <content type="html"><![CDATA[<p>Object.assign将可以枚举的属性赋值给对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> skey = <span class="built_in">Symbol</span>(<span class="string">&#x27;testname&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="built_in">Object</span>.assign(obj, &#123;<span class="attr">name</span>: <span class="string">&#x27;leo&#x27;</span>&#125;, &#123;<span class="attr">age</span>: <span class="number">30</span>&#125;,&#123;[skey]:<span class="string">&#x27;ok good&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj === obj2, obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj[skey]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> DEFAULT_OPTIONS = &#123;</span><br><span class="line">    name: <span class="string">&#x27;leo&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">opts</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> options = <span class="built_in">Object</span>.assign(&#123;&#125;, DEFAULT_OPTIONS, opts);</span><br><span class="line">    <span class="built_in">console</span>.log(options);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test();</span><br><span class="line"></span><br><span class="line">test(&#123;<span class="attr">name</span>:<span class="string">&#x27;zengliang&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ES6笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6-Object.is</title>
      <link href="2017/01/19/ES6-Object-is/"/>
      <url>2017/01/19/ES6-Object-is/</url>
      
        <content type="html"><![CDATA[<p>Object.is相当于全等又有些区别</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.is(&#123;&#125;,&#123;&#125;) , &#123;&#125; === &#123;&#125; ); <span class="comment">//fasle false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.is(<span class="literal">NaN</span>,<span class="literal">NaN</span>) , <span class="literal">NaN</span> === <span class="literal">NaN</span>);  <span class="comment">//true false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.is(+<span class="number">0</span>,-<span class="number">0</span>) , +<span class="number">0</span> === -<span class="number">0</span>);  <span class="comment">//false true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ES6笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6-对象属性的新写法</title>
      <link href="2017/01/19/ES6-%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E7%9A%84%E6%96%B0%E5%86%99%E6%B3%95/"/>
      <url>2017/01/19/ES6-%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E7%9A%84%E6%96%B0%E5%86%99%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&#x27;leo&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">getName</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="built_in">this</span>.age = <span class="number">22</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">getAge</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="built_in">Symbol</span>(<span class="string">&#x27;fullname&#x27;</span>)]()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">B.prototype.getClass = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> B;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Object.keys 能够得到自身的可枚举的属性,但得不到原型链上的属性.</span></span><br><span class="line"><span class="comment">// 得不到 Symbols 属性</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(B.prototype));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Object.getOwnPropertyNames(b) 能够得到自身属性,</span></span><br><span class="line"><span class="comment">// 包括不可枚举的属性,但得不到原型链上的属性.</span></span><br><span class="line"><span class="comment">// 得不到 Symbols 属性</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyNames(B.prototype));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以得到自身的 Symbols 属性,包括不可枚举的属性.</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertySymbols(B.prototype));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以得到自身和继承的原型链上的属性,但必须是可枚举属性.</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> b)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断是否可枚举，enumerable为true可枚举</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(B.prototype,<span class="string">&#x27;getAge&#x27;</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ES6笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-forEach和map</title>
      <link href="2017/01/18/JS-forEach%E5%92%8Cmap/"/>
      <url>2017/01/18/JS-forEach%E5%92%8Cmap/</url>
      
        <content type="html"><![CDATA[<p>第1个是遍历的数组内容；<br>第2个是对应的数组索引;<br>第3个是数组本身   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, array</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>举个栗子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>].map(<span class="function"><span class="keyword">function</span>(<span class="params">v, i</span>)</span>&#123;<span class="keyword">return</span> v &gt; <span class="number">3</span>;&#125;);</span><br><span class="line"><span class="comment">//[false, false, false, true, true]</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">v, i</span>)</span>&#123;<span class="keyword">return</span> v &gt; <span class="number">3</span>;&#125;);</span><br><span class="line"><span class="comment">//undefined</span></span><br></pre></td></tr></table></figure><p><strong>map()方法</strong>：<br>若这个回调函数有返回值，map()方法会产生一个新数组，这个新数组由原数组元素对应的回调函数的返回值构成。<br>若没有返回值，则新数组的所有元素为undefined。<br><strong>forEach方法</strong>：<br>仅仅为每个数组元素执行回调函数。   </p><p>再举一个</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].map(<span class="function"><span class="keyword">function</span>(<span class="params">v, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> v+<span class="number">1</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);    <span class="comment">//[2, 3, 4, 5, 6]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">v, i</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(v,i)    <span class="comment">//1 0</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
            <tag> 基础 </tag>
            
            <tag> forEach </tag>
            
            <tag> map </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-sort</title>
      <link href="2017/01/18/JS-sort/"/>
      <url>2017/01/18/JS-sort/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>);</span><br><span class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b-a</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(arrSimple2.join());</span><br></pre></td></tr></table></figure><p><strong>解释</strong>：a,b表示数组中的任意两个元素，若return &gt; 0 b前a后；reutrn &lt; 0 a前b后；a=b时存在浏览器兼容<br><strong>简化一下</strong>：a-b输出从小到大排序，b-a输出从大到小排序。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objectList = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Persion</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">objectList.push(<span class="keyword">new</span> Persion(<span class="string">&#x27;jack&#x27;</span>, <span class="number">20</span>));</span><br><span class="line">objectList.push(<span class="keyword">new</span> Persion(<span class="string">&#x27;tony&#x27;</span>, <span class="number">25</span>));</span><br><span class="line">objectList.push(<span class="keyword">new</span> Persion(<span class="string">&#x27;stone&#x27;</span>, <span class="number">26</span>));</span><br><span class="line">objectList.push(<span class="keyword">new</span> Persion(<span class="string">&#x27;mandy&#x27;</span>, <span class="number">23</span>));</span><br><span class="line"><span class="comment">//按年龄从小到大排序</span></span><br><span class="line">objectList.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.age - b.age</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; objectList.length; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;age:&#x27;</span> + objectList[i].age + <span class="string">&#x27; name:&#x27;</span> + objectList[i].name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以对对象的属性进行排序</p>]]></content>
      
      
      <categories>
          
          <category> JS基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
            <tag> 基础 </tag>
            
            <tag> sort </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-match和exec</title>
      <link href="2017/01/18/JS-match%E5%92%8Cexec/"/>
      <url>2017/01/18/JS-match%E5%92%8Cexec/</url>
      
        <content type="html"><![CDATA[<p>举个栗子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> order = <span class="string">&#x27;is2&#x27;</span></span><br><span class="line"><span class="keyword">var</span> arr = order.match(<span class="regexp">/\d+/</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr)</span><br><span class="line"><span class="comment">//[&quot;2&quot;, index: 2, input: &quot;is2&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr2 = <span class="regexp">/\d+/</span>.exec(order);</span><br><span class="line"><span class="built_in">console</span>.log(arr2)</span><br><span class="line"><span class="comment">//[&quot;2&quot;, index: 2, input: &quot;is2&quot;]</span></span><br></pre></td></tr></table></figure><p>值得注意的是match和exec返回的结果都是数组</p>]]></content>
      
      
      <categories>
          
          <category> JS基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
            <tag> 基础 </tag>
            
            <tag> match </tag>
            
            <tag> exec </tag>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-includes和indexOf</title>
      <link href="2017/01/18/JS-includes%E5%92%8CindexOf/"/>
      <url>2017/01/18/JS-includes%E5%92%8CindexOf/</url>
      
        <content type="html"><![CDATA[<p>举个栗子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;hahaha123&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(str.includes(<span class="string">&#x27;1&#x27;</span>));     <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(str.indexOf(<span class="string">&#x27;1&#x27;</span>));      <span class="comment">//6</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="built_in">console</span>.log(arr.includes(<span class="number">1</span>));       <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="number">1</span>));        <span class="comment">//0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
            <tag> 基础 </tag>
            
            <tag> includes </tag>
            
            <tag> indexOf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-join拼接</title>
      <link href="2017/01/18/JS-join%E6%8B%BC%E6%8E%A5/"/>
      <url>2017/01/18/JS-join%E6%8B%BC%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>)</span><br><span class="line">arr[<span class="number">0</span>] = <span class="string">&quot;George&quot;</span></span><br><span class="line">arr[<span class="number">1</span>] = <span class="string">&quot;John&quot;</span></span><br><span class="line">arr[<span class="number">2</span>] = <span class="string">&quot;Thomas&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">&#x27; &#x27;</span>))  <span class="comment">//George John Thomas</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
            <tag> 基础 </tag>
            
            <tag> 数组 </tag>
            
            <tag> 拼接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-arguments</title>
      <link href="2017/01/18/JS-arguments/"/>
      <url>2017/01/18/JS-arguments/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);         <span class="comment">//[&quot;123&quot;]</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>.length);  <span class="comment">//1</span></span><br><span class="line">    <span class="built_in">console</span>.log(test.length);       <span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line">test(<span class="string">&#x27;123&#x27;</span>)</span><br></pre></td></tr></table></figure><p>通过arguments可以获取传入的参数，function.length可以获取本该传入的参数</p>]]></content>
      
      
      <categories>
          
          <category> JS基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
            <tag> 基础 </tag>
            
            <tag> 参数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-数组比较</title>
      <link href="2017/01/18/JS-%E6%95%B0%E7%BB%84%E6%AF%94%E8%BE%83/"/>
      <url>2017/01/18/JS-%E6%95%B0%E7%BB%84%E6%AF%94%E8%BE%83/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = [<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="keyword">var</span> y = [<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x == y);     <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(x === y );   <span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>javascript不能直接用==或者===来判断两个数组是否相等，无论是相等还是全等都不行。<br>要判断数组是否相等，要先将数组转换为字符串，再作比较</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = [<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="keyword">var</span> y = [<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="built_in">console</span>.log(x.toString() == y.toString())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
            <tag> 基础 </tag>
            
            <tag> 数组 </tag>
            
            <tag> 比较 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-String转数字类型</title>
      <link href="2017/01/18/JS-String%E8%BD%AC%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B/"/>
      <url>2017/01/18/JS-String%E8%BD%AC%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="需要将string转成数字时，如果需要保留小数，只要用-就行了"><a href="#需要将string转成数字时，如果需要保留小数，只要用-就行了" class="headerlink" title="需要将string转成数字时，如果需要保留小数，只要用+就行了"></a>需要将string转成数字时，如果需要保留小数，只要用+就行了</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;123&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(str))</span><br><span class="line"><span class="comment">//转整数时没问题</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;123.45&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(+str1)</span><br><span class="line"><span class="comment">//只要用+就行了</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
            <tag> 基础 </tag>
            
            <tag> 转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6-set</title>
      <link href="2017/01/18/ES6-set/"/>
      <url>2017/01/18/ES6-set/</url>
      
        <content type="html"><![CDATA[<h2 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h2><p>set是类数组</p><h2 id="可以用来做什么？"><a href="#可以用来做什么？" class="headerlink" title="可以用来做什么？"></a>可以用来做什么？</h2><p>可以用来给数组去重</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr =  [<span class="string">&#x27;jiayongfeng&#x27;</span>,<span class="string">&#x27;jimmy&#x27;</span>,<span class="string">&#x27;jimmy&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> newArr = <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr))</span><br><span class="line"><span class="built_in">console</span>.log(newArr)</span><br></pre></td></tr></table></figure><h2 id="怎么用？"><a href="#怎么用？" class="headerlink" title="怎么用？"></a>怎么用？</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;<span class="attr">name</span>:<span class="string">&#x27;jiayongfeng&#x27;</span>,<span class="attr">age</span>:<span class="string">&#x27;28&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">let</span> st = <span class="keyword">new</span> <span class="built_in">Set</span>()  </span><br><span class="line">st.add(user)        <span class="comment">//添加</span></span><br><span class="line">st.delete(user)     <span class="comment">//删除</span></span><br><span class="line">st.has(user)        <span class="comment">//判断有无</span></span><br><span class="line">st.clear()          <span class="comment">//清空</span></span><br><span class="line"><span class="built_in">console</span>.log(st.size)    <span class="comment">//查看数量</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> o <span class="keyword">of</span> st)&#123;       <span class="comment">//遍历</span></span><br><span class="line">    <span class="built_in">console</span>.log(o)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ES6笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6-map</title>
      <link href="2017/01/18/ES6-map/"/>
      <url>2017/01/18/ES6-map/</url>
      
        <content type="html"><![CDATA[<h2 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h2><p>map是键值对的类数组</p><h2 id="可以用来做什么？"><a href="#可以用来做什么？" class="headerlink" title="可以用来做什么？"></a>可以用来做什么？</h2><p>对象中的key必须是<code>string</code>，map中key可以是任意值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;</span><br><span class="line">    name : <span class="string">&#x27;jiayongfeng&#x27;</span>,</span><br><span class="line">    age : <span class="number">28</span>,</span><br><span class="line">    <span class="string">&#x27;english name&#x27;</span>:<span class="string">&#x27;jimmy&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([</span><br><span class="line">    [user,<span class="string">&#x27;shuai&#x27;</span>],     <span class="comment">//key可以是对象</span></span><br><span class="line">    [<span class="string">&#x27;qq&#x27;</span>,<span class="string">&#x27;740534248&#x27;</span>]</span><br><span class="line">])</span><br></pre></td></tr></table></figure><h2 id="怎么用？"><a href="#怎么用？" class="headerlink" title="怎么用？"></a>怎么用？</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>()</span><br><span class="line">map.set(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;jiayongfeng&#x27;</span>)   <span class="comment">//赋值</span></span><br><span class="line">map.set(<span class="string">&#x27;age&#x27;</span>,<span class="number">28</span>)</span><br><span class="line"><span class="built_in">console</span>.log(map.get(<span class="string">&#x27;age&#x27;</span>))     <span class="comment">//取值</span></span><br><span class="line"><span class="built_in">console</span>.log(map.size)           <span class="comment">//查看大小</span></span><br><span class="line">map.delete(<span class="string">&#x27;age&#x27;</span>)               <span class="comment">//删除</span></span><br><span class="line">map.has(<span class="string">&#x27;name&#x27;</span>)                 <span class="comment">//判断有无</span></span><br><span class="line">map.clear()                     <span class="comment">//清空</span></span><br><span class="line"><span class="comment">//值得注意NaN在map和set是全等的</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span> === <span class="literal">NaN</span>)    <span class="comment">//false</span></span><br><span class="line">map.set(<span class="literal">NaN</span>,<span class="string">&#x27;1111&#x27;</span>);</span><br><span class="line">map.set(<span class="literal">NaN</span>,<span class="string">&#x27;2222&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(map.get(<span class="literal">NaN</span>));    <span class="comment">//2222</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> o <span class="keyword">of</span> map)&#123;              <span class="comment">//遍历</span></span><br><span class="line">    <span class="built_in">console</span>.log(o)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> keys = map.keys()           <span class="comment">//获取所有的key</span></span><br><span class="line"><span class="keyword">let</span> values = map.values()       <span class="comment">//获取所有的value</span></span><br><span class="line"><span class="keyword">let</span> entries = map.entries()     <span class="comment">//获取所有的键值对</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> o <span class="keyword">of</span> entries)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(o)              <span class="comment">//等同于上面的遍历</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _this = &#123;</span><br><span class="line">    des : <span class="string">&#x27;shuai&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line">map.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">k, v</span>) </span>&#123;       <span class="comment">//遍历，同时可以传入this</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.des,k, v);</span><br><span class="line">&#125;,_this);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ES6笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6-Array</title>
      <link href="2017/01/18/ES6-Array/"/>
      <url>2017/01/18/ES6-Array/</url>
      
        <content type="html"><![CDATA[<h3 id="Array-from"><a href="#Array-from" class="headerlink" title="Array.from"></a>Array.from</h3><p>类似数组的数据结构转换为数组<br>可以把带有length属性的对象和实现了iterator接口的对象转换为数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="built_in">Array</span>.from(&#123;</span><br><span class="line"><span class="string">&#x27;0&#x27;</span>:<span class="string">&#x27;qq 740534248&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;jimmy&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;length&#x27;</span>:<span class="number">2</span></span><br><span class="line">&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line"> <span class="keyword">return</span> item + <span class="string">&#x27;---&#x27;</span> + index</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//必须是这种样子的对象，其他的不行</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> set = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="string">&#x27;me&#x27;</span>,<span class="string">&#x27;book&#x27;</span>,<span class="string">&#x27;leo&#x27;</span>]);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(set));</span><br></pre></td></tr></table></figure><p>querySelectorAll查询出的类数组也能转换</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>item4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>item5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> list = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(list)  <span class="comment">//NodeList[5]</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(list));  <span class="comment">//ArrayList[5]</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Array-of"><a href="#Array-of" class="headerlink" title="Array.of"></a>Array.of</h3><p>用来构建数组，防止Array(7)这种情况发生</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.of(<span class="number">7</span>);       <span class="comment">// [7]</span></span><br><span class="line"><span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>); <span class="comment">// [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Array</span>(<span class="number">7</span>);          <span class="comment">// [ , , , , , , ]</span></span><br><span class="line"><span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);    <span class="comment">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><p>找到符合函数的第一个值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [  <span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span> ];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> value = arr.find(<span class="function"><span class="keyword">function</span>(<span class="params">value,index,arr</span>)</span>&#123; <span class="comment">//值，索引，原数组</span></span><br><span class="line">   <span class="keyword">return</span> value &gt; <span class="number">33</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(value); <span class="comment">//44</span></span><br></pre></td></tr></table></figure><h3 id="findIndex"><a href="#findIndex" class="headerlink" title="findIndex"></a>findIndex</h3><p>找到符合函数的第一个值的索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [  <span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span> ];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> value = arr.findIndex(<span class="function"><span class="keyword">function</span>(<span class="params">value,index,arr</span>)</span>&#123; <span class="comment">//值，索引，原数组</span></span><br><span class="line">   <span class="keyword">return</span> value &gt; <span class="number">33</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(value); <span class="comment">//2</span></span><br></pre></td></tr></table></figure><p>IndexOf比较</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">22</span>,<span class="literal">NaN</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr2.indexOf(<span class="literal">NaN</span>))  <span class="comment">//-1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2.findIndex(<span class="function"><span class="keyword">function</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="built_in">Object</span>.is(<span class="literal">NaN</span>,v);</span><br><span class="line">&#125;));    <span class="comment">//1</span></span><br></pre></td></tr></table></figure><h3 id="copyWithin"><a href="#copyWithin" class="headerlink" title="copyWithin"></a>copyWithin</h3><p>copyWithin(position,start,end);<br>要被替换的开始位置，用于替换的起始位置，用于替换的结束位置（不包含）<br>也可以用负数，代表从后往前数第几个，如-3代表正数第4个</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ar arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//arr.copyWithin(1,5,7);  //[ 1, 6, 7, 4, 5, 6, 7 ]</span></span><br><span class="line">arr.copyWithin(<span class="number">2</span>,-<span class="number">3</span>,<span class="number">6</span>); <span class="comment">//[ 1, 2, 5, 6, 5, 6, 7 ]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure><h3 id="fill"><a href="#fill" class="headerlink" title="fill"></a>fill</h3><p>填充数组<br>fill(value,start,end)<br>用来填充的值，被填充的起始位置，被填充的结束位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>];</span><br><span class="line"><span class="comment">//arr.fill(10)</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)    <span class="comment">//[10,10,10,10,10,10,10]</span></span><br><span class="line">arr.fill(<span class="number">10</span>,<span class="number">2</span>,<span class="number">5</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr)    <span class="comment">//[1,2,10,10,10,6,7]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ES6笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 源代码阅读工具</title>
      <link href="2017/01/17/JavaScript-%E6%BA%90%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB%E5%B7%A5%E5%85%B7/"/>
      <url>2017/01/17/JavaScript-%E6%BA%90%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="lambda-view"><a href="#lambda-view" class="headerlink" title="lambda-view"></a>lambda-view</h2><p><a href="https://github.com/Jianru-Lin/lambda-view">https://github.com/Jianru-Lin/lambda-view</a></p><p>命令行输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lv &#x2F;path&#x2F;somewhere&#x2F;xyz.js</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lv http:&#x2F;&#x2F;vuejs.org&#x2F;js&#x2F;vue.js</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源代码查看 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Atom使用eslint需要安装的包</title>
      <link href="2017/01/17/Atom%E4%BD%BF%E7%94%A8eslint%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E7%9A%84%E5%8C%85/"/>
      <url>2017/01/17/Atom%E4%BD%BF%E7%94%A8eslint%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E7%9A%84%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;eslint&quot;</span>: <span class="string">&quot;^3.13.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;eslint-config-airbnb&quot;</span>: <span class="string">&quot;^14.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;eslint-plugin-import&quot;</span>: <span class="string">&quot;^2.2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;eslint-plugin-jsx-a11y&quot;</span>: <span class="string">&quot;^3.0.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;eslint-plugin-react&quot;</span>: <span class="string">&quot;^6.9.0&quot;</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint --save</span><br><span class="line">eslint -v</span><br><span class="line">eslint --init</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint-config-airbnb --save</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint-plugin-import --save</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint-plugin-jsx-a11y --save</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint-plugin-react --save</span><br></pre></td></tr></table></figure><p>.eslintrc.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">&quot;extends&quot;</span>: <span class="string">&quot;airbnb&quot;</span>,    <span class="comment">//使用airbnb前端编码规范</span></span><br><span class="line">    <span class="string">&quot;installedESLint&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;rules&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;indent&quot;</span>: [<span class="string">&quot;error&quot;</span>, <span class="number">4</span>]  <span class="comment">//缩进4个空格</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atom </tag>
            
            <tag> eslint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>带数字字符串排序</title>
      <link href="2017/01/17/%E5%B8%A6%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F/"/>
      <url>2017/01/17/%E5%B8%A6%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="今天组里在Q群发了一个问题："><a href="#今天组里在Q群发了一个问题：" class="headerlink" title="今天组里在Q群发了一个问题："></a>今天组里在Q群发了一个问题：</h3><p>为一个给定字符串排序，这个字符串里的每一个单词都包含一个数字，请按数字大小给这些单词排序。</p><p>例如：is2 Thi1s T4est 3a 的结果是 Thi1s is2 3a T4est<br>然后出现了3种解题：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;is2 Thi1s T4est 3a&#x27;</span></span><br><span class="line"><span class="keyword">var</span> newArr = a.split(<span class="string">&#x27; &#x27;</span>).map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line"> <span class="built_in">console</span>.log(item)</span><br><span class="line"> <span class="keyword">var</span> arr = item.match(<span class="regexp">/\d+/</span>)</span><br><span class="line"> <span class="keyword">return</span> arr</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> str = newArr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> +a[<span class="number">0</span>] &gt; +b[<span class="number">0</span>]</span><br><span class="line">&#125;).map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> item[<span class="string">&#x27;input&#x27;</span>]</span><br><span class="line">&#125;).join(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(str)</span><br></pre></td></tr></table></figure><p>将原字符串用’ ‘分割成数组，然后遍历，返回由match后生成的数组组成的数组<br>将新的数组按照match数组第0个元素（匹配正则的数字）排序，然后遍历返回match数组input元素（原来的String），最后拼接成字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> words = <span class="string">&#x27;is2 Thi1s T4est 3a&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">orderNew</span>(<span class="params">words</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ordered = [];</span><br><span class="line">  <span class="keyword">var</span> arr = words.split(<span class="string">&#x27; &#x27;</span>);  </span><br><span class="line"></span><br><span class="line">    arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> match = <span class="regexp">/\d+/</span>.exec(item);</span><br><span class="line">        ordered[<span class="built_in">parseInt</span>(match[<span class="number">0</span>])] = item;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> ordered.join(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(orderNew(words));</span><br></pre></td></tr></table></figure><p>同样的将原字符串用’ ‘分割成数组，然后遍历<br>遍历时将原数组元素放入新数组第[macth数组第0个元素（匹配正则的数字）]个元素<br>最后将新数组拼接成字符串<br>因为是数字排序，所有将找到的数据当成索引用，但是可能存在问题，如果有重复数字时，会覆盖掉</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> words = <span class="string">&#x27;is2 Thi1s T4est 3a&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">order</span>(<span class="params">words</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> words.split(<span class="string">&#x27; &#x27;</span>).sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> a.match(<span class="regexp">/\d+/</span>) - b.match(<span class="regexp">/\d+/</span>);</span><br><span class="line">   &#125;).join(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(order(words));</span><br></pre></td></tr></table></figure><p>更加简化，将原字符串分割后直接按照数组元素匹配正则后的结果排序后，拼接</p>]]></content>
      
      
      <categories>
          
          <category> 编程思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Vue生命周期的一些理解记录</title>
      <link href="2017/01/17/%E5%85%B3%E4%BA%8EVue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3%E8%AE%B0%E5%BD%95/"/>
      <url>2017/01/17/%E5%85%B3%E4%BA%8EVue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>今天遇到个问题，大致是这样的：从父组件向子组件传值，第三层数据终端报错undefined，先上测试代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件</span></span><br><span class="line">&lt;template lang=<span class="string">&quot;html&quot;</span>&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;son :data=<span class="string">&quot;data1&quot;</span>&gt;&lt;/son&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> Son <span class="keyword">from</span> <span class="string">&#x27;../son/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            data1:&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.data1=&#123;</span><br><span class="line">            name:<span class="string">&#x27;最外层&#x27;</span>,</span><br><span class="line">            value1:&#123;</span><br><span class="line">                name:<span class="string">&#x27;第一层&#x27;</span>,</span><br><span class="line">                value2:&#123;</span><br><span class="line">                    name:<span class="string">&#x27;第二层&#x27;</span>,</span><br><span class="line">                    value3:&#123;</span><br><span class="line">                        name:<span class="string">&#x27;第三层&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components:&#123;</span><br><span class="line">        Son</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子组件</span></span><br><span class="line">&lt;template lang=<span class="string">&quot;html&quot;</span>&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">      最外层</span><br><span class="line">      &#123;&#123;data.name&#125;&#125;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">          第一层</span><br><span class="line">          &#123;&#123;data.value1.name&#125;&#125;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">              第二层</span><br><span class="line">              &#123;&#123;data.value1.value2.name&#125;&#125;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                  第三层</span><br><span class="line">                  &#123;&#123;data.value1.value2.value3.name&#125;&#125;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    props:[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解决办法是将<code>mounted</code>中的赋值过程，改在<code>beforeMount</code>或者<code>created</code>中进行。或者先给<code>data</code>一个空的数据结构。<br>原因是子组件渲染时，<code>data</code>的赋值还没进行，所以属性都是undefined</p>]]></content>
      
      
      <categories>
          
          <category> Vue笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩展运算符(…)结合的使用</title>
      <link href="2017/01/17/%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6-%E2%80%A6-%E7%BB%93%E5%90%88%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2017/01/17/%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6-%E2%80%A6-%E7%BB%93%E5%90%88%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>引入mapActions</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapActions, mapGetters &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br></pre></td></tr></table></figure><p>在<code>methods</code>中写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...mapActions([</span><br><span class="line">  <span class="string">&#x27;SET_MAIL_LIST&#x27;</span></span><br><span class="line">]),</span><br></pre></td></tr></table></figure><p>数组中的所有方法会被引入，在使用时只要</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.SET_MAIL_LIST(&#123;mailList&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac拼音输入法</title>
      <link href="2017/01/17/Mac%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95/"/>
      <url>2017/01/17/Mac%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<ol><li>中英文切换<br>mac自身输入法：<strong>Command＋空格</strong></li><li>汉字输入切换下一页（用鼠标去点，太low了吧）<br>假如你输入的文字不再第一页，这是需要我们切换页，上一页，是键盘上的“<strong>［</strong>”，下一页是键盘上的“<strong>］</strong>”。<br>mac自身的输入法，也可以使用上下箭头来操作，但是，总是要低头找这个箭头，不方便。</li><li>输入特殊符号<br>如果你记住了某个特殊字符的快捷键，那么，你只需使用 <strong>shift+option+键盘上的任何字符</strong>，来输入。如：<strong>shift+option+p</strong>是符号：∏<br>当然，所有特殊符号都记住，是不可能的事情 ，所以，你也可以调出mac的特殊符号集，快捷键是<strong>control+coomand+空格</strong>，快去试试看，找到你想要的</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
            <tag> Mac </tag>
            
            <tag> 输入法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Atom已安装package记录</title>
      <link href="2017/01/17/Atom%E5%B7%B2%E5%AE%89%E8%A3%85package%E8%AE%B0%E5%BD%95/"/>
      <url>2017/01/17/Atom%E5%B7%B2%E5%AE%89%E8%A3%85package%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="platformio-ide-terminal"><a href="#platformio-ide-terminal" class="headerlink" title="platformio-ide-terminal"></a>platformio-ide-terminal</h3><blockquote><p>命令行工具<br>快捷键：control+`呼出</p></blockquote><h3 id="activate-power-mode"><a href="#activate-power-mode" class="headerlink" title="activate-power-mode"></a>activate-power-mode</h3><blockquote><p>炫酷的打字特效</p></blockquote><h3 id="atom-beautify"><a href="#atom-beautify" class="headerlink" title="atom-beautify"></a>atom-beautify</h3><blockquote><p>美化、整理代码</p></blockquote><h3 id="atom-ctags"><a href="#atom-ctags" class="headerlink" title="atom-ctags"></a>atom-ctags</h3><blockquote><p>强化版的自动完成，借助于autocomplete-plus</p></blockquote><h3 id="atom-ternjs"><a href="#atom-ternjs" class="headerlink" title="atom-ternjs"></a>atom-ternjs</h3><blockquote><p>JS代码智能提示</p></blockquote><h3 id="autocomplete-paths"><a href="#autocomplete-paths" class="headerlink" title="autocomplete-paths"></a>autocomplete-paths</h3><blockquote><p>文件路径智能提示</p></blockquote><h3 id="color-picker"><a href="#color-picker" class="headerlink" title="color-picker"></a>color-picker</h3><blockquote><p>颜色拾取器<br>快捷键：commod+shift+c</p></blockquote><h3 id="docblockr"><a href="#docblockr" class="headerlink" title="docblockr"></a>docblockr</h3><blockquote><p>代码注释自动生成</p></blockquote><h3 id="file-icons"><a href="#file-icons" class="headerlink" title="file-icons"></a>file-icons</h3><blockquote><p>文件图标</p></blockquote><h3 id="git-plus"><a href="#git-plus" class="headerlink" title="git-plus"></a>git-plus</h3><blockquote><p>git插件</p></blockquote><h3 id="highlight-selected"><a href="#highlight-selected" class="headerlink" title="highlight-selected"></a>highlight-selected</h3><blockquote><p>选中高亮</p></blockquote><h3 id="language-vue"><a href="#language-vue" class="headerlink" title="language-vue"></a>language-vue</h3><blockquote><p>识别Vue</p></blockquote><h3 id="linter"><a href="#linter" class="headerlink" title="linter"></a>linter</h3><blockquote><p>代码校验基础工具</p></blockquote><h3 id="linter-csslint"><a href="#linter-csslint" class="headerlink" title="linter-csslint"></a>linter-csslint</h3><blockquote><p>校验css</p></blockquote><h3 id="linter-eslint"><a href="#linter-eslint" class="headerlink" title="linter-eslint"></a>linter-eslint</h3><blockquote><p>校验js，配合.eslintrc使用</p></blockquote><h3 id="linter-sass-lint"><a href="#linter-sass-lint" class="headerlink" title="linter-sass-lint"></a>linter-sass-lint</h3><blockquote><p>校验sass</p></blockquote><h3 id="minimap"><a href="#minimap" class="headerlink" title="minimap"></a>minimap</h3><blockquote><p>右边小地图</p></blockquote><h3 id="minimap-find-and-replace"><a href="#minimap-find-and-replace" class="headerlink" title="minimap-find-and-replace"></a>minimap-find-and-replace</h3><blockquote><p>在小地图上显示搜索匹配</p></blockquote><h3 id="minimap-highlight-selected"><a href="#minimap-highlight-selected" class="headerlink" title="minimap-highlight-selected"></a>minimap-highlight-selected</h3><blockquote><p>在小地图上显示选中的</p></blockquote><h3 id="pigments"><a href="#pigments" class="headerlink" title="pigments"></a>pigments</h3><blockquote><p>根据色值直接显示颜色</p></blockquote><h3 id="simplified-chinese-menu"><a href="#simplified-chinese-menu" class="headerlink" title="simplified-chinese-menu"></a>simplified-chinese-menu</h3><blockquote><p>中文汉化包</p></blockquote><h3 id="vue-autocomplete"><a href="#vue-autocomplete" class="headerlink" title="vue-autocomplete"></a>vue-autocomplete</h3><blockquote><p>Vue自动完成</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atom </tag>
            
            <tag> 开发工具 </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
